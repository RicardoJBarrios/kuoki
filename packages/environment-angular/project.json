{
  "name": "environment-angular",
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "projectType": "library",
  "sourceRoot": "packages/environment-angular/src",
  "prefix": "kuoki",
  "targets": {
    "build": {
      "executor": "@nrwl/angular:package",
      "outputs": ["{workspaceRoot}/dist/packages/environment-angular"],
      "dependsOn": ["environment"],
      "options": {
        "project": "packages/environment-angular/ng-package.json"
      },
      "configurations": {
        "production": {
          "tsConfig": "packages/environment-angular/tsconfig.lib.prod.json"
        },
        "development": {
          "tsConfig": "packages/environment-angular/tsconfig.lib.json"
        }
      },
      "defaultConfiguration": "production"
    },
    "test": {
      "executor": "@nrwl/jest:jest",
      "outputs": ["{workspaceRoot}/docs/environment-angular/coverage/lcov-report"],
      "options": {
        "jestConfig": "packages/environment-angular/jest.config.ts",
        "passWithNoTests": true
      }
    },
    "lint": {
      "executor": "@nrwl/linter:eslint",
      "outputs": ["{options.outputFile}"],
      "options": {
        "lintFilePatterns": ["packages/environment-angular/src/**/*.ts", "packages/environment-angular/src/**/*.html"]
      }
    },
    "docs": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "npx typedoc --options packages/environment-angular/typedoc.json",
          "nx test environment-angular --code-coverage --skip-nx-cache"
        ],
        "parallel": false
      }
    },
    "version": {
      "executor": "@jscutlery/semver:version",
      "options": {
        "commitMessageFormat": "chore(${projectName}): release version ${version}",
        "tagPrefix": "${projectName}-v",
        "noVerify": true,
        "push": true,
        "postTargets": ["environment-angular:github"]
      }
    },
    "github": {
      "executor": "@jscutlery/semver:github",
      "options": {
        "tag": "${tag}",
        "notes": "${notes}"
      }
    }
  },
  "tags": []
}
