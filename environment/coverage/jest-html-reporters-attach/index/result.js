window.jest_html_reporters_callback__({"numFailedTestSuites":0,"numFailedTests":0,"numPassedTestSuites":35,"numPassedTests":324,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":35,"numTotalTests":324,"startTime":1681381885449,"success":false,"testResults":[{"numFailingTests":0,"numPassingTests":91,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1681381890283,"runtime":4380,"slow":false,"start":1681381885903},"testFilePath":"/home/runner/work/kuoki/kuoki/packages/environment/src/lib/service/environment-service.application.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["DefaultEnvironmentService","reset()"],"duration":5,"failureMessages":[],"fullName":"DefaultEnvironmentService reset() returns {code:205} if the store is reset","status":"passed","title":"returns {code:205} if the store is reset"},{"ancestorTitles":["DefaultEnvironmentService","reset()"],"duration":3,"failureMessages":[],"fullName":"DefaultEnvironmentService reset() resets the environment store to the initial state","status":"passed","title":"resets the environment store to the initial state"},{"ancestorTitles":["DefaultEnvironmentService","reset()"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService reset() returns {code:460,error} if store error","status":"passed","title":"returns {code:460,error} if store error"},{"ancestorTitles":["DefaultEnvironmentService","create(path,value)"],"duration":2,"failureMessages":[],"fullName":"DefaultEnvironmentService create(path,value) returns {code:201,path,value} if property created","status":"passed","title":"returns {code:201,path,value} if property created"},{"ancestorTitles":["DefaultEnvironmentService","create(path,value)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService create(path,value) updates the environment store if property created","status":"passed","title":"updates the environment store if property created"},{"ancestorTitles":["DefaultEnvironmentService","create(path,value)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService create(path,value) updates the environment store if property created with complex path","status":"passed","title":"updates the environment store if property created with complex path"},{"ancestorTitles":["DefaultEnvironmentService","create(path,value)"],"duration":2,"failureMessages":[],"fullName":"DefaultEnvironmentService create(path,value) updates the environment store if property created in complex path","status":"passed","title":"updates the environment store if property created in complex path"},{"ancestorTitles":["DefaultEnvironmentService","create(path,value)"],"duration":5,"failureMessages":[],"fullName":"DefaultEnvironmentService create(path,value) updates the environment store if immutable environment","status":"passed","title":"updates the environment store if immutable environment"},{"ancestorTitles":["DefaultEnvironmentService","create(path,value)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService create(path,value) returns {code:400,path,value,error} if invalid path","status":"passed","title":"returns {code:400,path,value,error} if invalid path"},{"ancestorTitles":["DefaultEnvironmentService","create(path,value)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService create(path,value) ignores the operation if invalid path","status":"passed","title":"ignores the operation if invalid path"},{"ancestorTitles":["DefaultEnvironmentService","create(path,value)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService create(path,value) returns {code:422,path,value,error} if property already exists","status":"passed","title":"returns {code:422,path,value,error} if property already exists"},{"ancestorTitles":["DefaultEnvironmentService","create(path,value)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService create(path,value) returns {code:422,path,value,error} if path already exists","status":"passed","title":"returns {code:422,path,value,error} if path already exists"},{"ancestorTitles":["DefaultEnvironmentService","create(path,value)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService create(path,value) ignores the operation if property already exists","status":"passed","title":"ignores the operation if property already exists"},{"ancestorTitles":["DefaultEnvironmentService","create(path,value)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService create(path,value) ignores the operation if path already exists","status":"passed","title":"ignores the operation if path already exists"},{"ancestorTitles":["DefaultEnvironmentService","create(path,value)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService create(path,value) returns {code:460,path,value,error} if store error","status":"passed","title":"returns {code:460,path,value,error} if store error"},{"ancestorTitles":["DefaultEnvironmentService","update(path,value)"],"duration":2,"failureMessages":[],"fullName":"DefaultEnvironmentService update(path,value) returns {code:200,path,value} if property updated","status":"passed","title":"returns {code:200,path,value} if property updated"},{"ancestorTitles":["DefaultEnvironmentService","update(path,value)"],"duration":2,"failureMessages":[],"fullName":"DefaultEnvironmentService update(path,value) updates the environment store if property updated","status":"passed","title":"updates the environment store if property updated"},{"ancestorTitles":["DefaultEnvironmentService","update(path,value)"],"duration":2,"failureMessages":[],"fullName":"DefaultEnvironmentService update(path,value) updates the environment store if property updated with complex path","status":"passed","title":"updates the environment store if property updated with complex path"},{"ancestorTitles":["DefaultEnvironmentService","update(path,value)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService update(path,value) updates the environment store if property updated in complex path","status":"passed","title":"updates the environment store if property updated in complex path"},{"ancestorTitles":["DefaultEnvironmentService","update(path,value)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService update(path,value) updates the environment store if immutable environment","status":"passed","title":"updates the environment store if immutable environment"},{"ancestorTitles":["DefaultEnvironmentService","update(path,value)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService update(path,value) returns {code:400,path,value,error} if invalid path","status":"passed","title":"returns {code:400,path,value,error} if invalid path"},{"ancestorTitles":["DefaultEnvironmentService","update(path,value)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService update(path,value) ignores the operation if invalid path","status":"passed","title":"ignores the operation if invalid path"},{"ancestorTitles":["DefaultEnvironmentService","update(path,value)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService update(path,value) returns {code:422,path,value,error} if path doesn't exist","status":"passed","title":"returns {code:422,path,value,error} if path doesn't exist"},{"ancestorTitles":["DefaultEnvironmentService","update(path,value)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService update(path,value) ignores the operation if path doesn't exist","status":"passed","title":"ignores the operation if path doesn't exist"},{"ancestorTitles":["DefaultEnvironmentService","update(path,value)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService update(path,value) returns {code:460,path,value,error} if store error","status":"passed","title":"returns {code:460,path,value,error} if store error"},{"ancestorTitles":["DefaultEnvironmentService","upsert(path,value)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService upsert(path,value) returns {code:201,path,value} if property created","status":"passed","title":"returns {code:201,path,value} if property created"},{"ancestorTitles":["DefaultEnvironmentService","upsert(path,value)"],"duration":0,"failureMessages":[],"fullName":"DefaultEnvironmentService upsert(path,value) updates the environment store if property created","status":"passed","title":"updates the environment store if property created"},{"ancestorTitles":["DefaultEnvironmentService","upsert(path,value)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService upsert(path,value) updates the environment store if property created with complex path","status":"passed","title":"updates the environment store if property created with complex path"},{"ancestorTitles":["DefaultEnvironmentService","upsert(path,value)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService upsert(path,value) updates the environment store if property created in complex path","status":"passed","title":"updates the environment store if property created in complex path"},{"ancestorTitles":["DefaultEnvironmentService","upsert(path,value)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService upsert(path,value) returns {code:200,path,value} if property updated","status":"passed","title":"returns {code:200,path,value} if property updated"},{"ancestorTitles":["DefaultEnvironmentService","upsert(path,value)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService upsert(path,value) updates the environment store if property updated","status":"passed","title":"updates the environment store if property updated"},{"ancestorTitles":["DefaultEnvironmentService","upsert(path,value)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService upsert(path,value) updates the environment store if property updated with complex path","status":"passed","title":"updates the environment store if property updated with complex path"},{"ancestorTitles":["DefaultEnvironmentService","upsert(path,value)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService upsert(path,value) updates the environment store if property updated in complex path","status":"passed","title":"updates the environment store if property updated in complex path"},{"ancestorTitles":["DefaultEnvironmentService","upsert(path,value)"],"duration":2,"failureMessages":[],"fullName":"DefaultEnvironmentService upsert(path,value) updates the environment store if immutable environment","status":"passed","title":"updates the environment store if immutable environment"},{"ancestorTitles":["DefaultEnvironmentService","upsert(path,value)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService upsert(path,value) returns {code:400,path,value,error} if invalid path","status":"passed","title":"returns {code:400,path,value,error} if invalid path"},{"ancestorTitles":["DefaultEnvironmentService","upsert(path,value)"],"duration":0,"failureMessages":[],"fullName":"DefaultEnvironmentService upsert(path,value) ignores the operation if invalid path","status":"passed","title":"ignores the operation if invalid path"},{"ancestorTitles":["DefaultEnvironmentService","upsert(path,value)"],"duration":0,"failureMessages":[],"fullName":"DefaultEnvironmentService upsert(path,value) returns {code:460,path,value,error} if store error","status":"passed","title":"returns {code:460,path,value,error} if store error"},{"ancestorTitles":["DefaultEnvironmentService","delete(path)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService delete(path) returns {code:204,path} if property deleted","status":"passed","title":"returns {code:204,path} if property deleted"},{"ancestorTitles":["DefaultEnvironmentService","delete(path)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService delete(path) updates the environment store if property deleted","status":"passed","title":"updates the environment store if property deleted"},{"ancestorTitles":["DefaultEnvironmentService","delete(path)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService delete(path) updates the environment store if property deleted with complex path","status":"passed","title":"updates the environment store if property deleted with complex path"},{"ancestorTitles":["DefaultEnvironmentService","delete(path)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService delete(path) updates the environment store if property deleted in complex path","status":"passed","title":"updates the environment store if property deleted in complex path"},{"ancestorTitles":["DefaultEnvironmentService","delete(path)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService delete(path) updates the environment store if immutable environment","status":"passed","title":"updates the environment store if immutable environment"},{"ancestorTitles":["DefaultEnvironmentService","delete(path)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService delete(path) returns {code:400,path,error} if invalid path","status":"passed","title":"returns {code:400,path,error} if invalid path"},{"ancestorTitles":["DefaultEnvironmentService","delete(path)"],"duration":0,"failureMessages":[],"fullName":"DefaultEnvironmentService delete(path) ignores the operation if invalid path","status":"passed","title":"ignores the operation if invalid path"},{"ancestorTitles":["DefaultEnvironmentService","delete(path)"],"duration":0,"failureMessages":[],"fullName":"DefaultEnvironmentService delete(path) returns {code:422,path,error} if path doesn't exist","status":"passed","title":"returns {code:422,path,error} if path doesn't exist"},{"ancestorTitles":["DefaultEnvironmentService","delete(path)"],"duration":0,"failureMessages":[],"fullName":"DefaultEnvironmentService delete(path) ignores the operation if path doesn't exist","status":"passed","title":"ignores the operation if path doesn't exist"},{"ancestorTitles":["DefaultEnvironmentService","delete(path)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService delete(path) returns {code:460,path,error} if store error","status":"passed","title":"returns {code:460,path,error} if store error"},{"ancestorTitles":["DefaultEnvironmentService","add(properties,path?)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService add(properties,path?) returns {code:200,value} if property added","status":"passed","title":"returns {code:200,value} if property added"},{"ancestorTitles":["DefaultEnvironmentService","add(properties,path?)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService add(properties,path?) updates the environment store if property added","status":"passed","title":"updates the environment store if property added"},{"ancestorTitles":["DefaultEnvironmentService","add(properties,path?)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService add(properties,path?) returns {code:200,value,path} if property added with path","status":"passed","title":"returns {code:200,value,path} if property added with path"},{"ancestorTitles":["DefaultEnvironmentService","add(properties,path?)"],"duration":7,"failureMessages":[],"fullName":"DefaultEnvironmentService add(properties,path?) updates the environment store if property added with path","status":"passed","title":"updates the environment store if property added with path"},{"ancestorTitles":["DefaultEnvironmentService","add(properties,path?)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService add(properties,path?) updates the environment store if property added with complex path","status":"passed","title":"updates the environment store if property added with complex path"},{"ancestorTitles":["DefaultEnvironmentService","add(properties,path?)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService add(properties,path?) updates the environment store overwriting existing values","status":"passed","title":"updates the environment store overwriting existing values"},{"ancestorTitles":["DefaultEnvironmentService","add(properties,path?)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService add(properties,path?) updates the environment store overwriting existing arrays","status":"passed","title":"updates the environment store overwriting existing arrays"},{"ancestorTitles":["DefaultEnvironmentService","add(properties,path?)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService add(properties,path?) updates the environment store if immutable environment","status":"passed","title":"updates the environment store if immutable environment"},{"ancestorTitles":["DefaultEnvironmentService","add(properties,path?)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService add(properties,path?) returns {code:400,value,path,error} if invalid path","status":"passed","title":"returns {code:400,value,path,error} if invalid path"},{"ancestorTitles":["DefaultEnvironmentService","add(properties,path?)"],"duration":0,"failureMessages":[],"fullName":"DefaultEnvironmentService add(properties,path?) ignores the operation if invalid path","status":"passed","title":"ignores the operation if invalid path"},{"ancestorTitles":["DefaultEnvironmentService","add(properties,path?)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService add(properties,path?) returns {code:460,value,error,path?} if store error","status":"passed","title":"returns {code:460,value,error,path?} if store error"},{"ancestorTitles":["DefaultEnvironmentService","addPreserving(properties,path?)"],"duration":0,"failureMessages":[],"fullName":"DefaultEnvironmentService addPreserving(properties,path?) returns {code:200,value} if property added preserving","status":"passed","title":"returns {code:200,value} if property added preserving"},{"ancestorTitles":["DefaultEnvironmentService","addPreserving(properties,path?)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService addPreserving(properties,path?) updates the environment store if property added preserving","status":"passed","title":"updates the environment store if property added preserving"},{"ancestorTitles":["DefaultEnvironmentService","addPreserving(properties,path?)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService addPreserving(properties,path?) returns {code:200,value,path} if property added preserving with path","status":"passed","title":"returns {code:200,value,path} if property added preserving with path"},{"ancestorTitles":["DefaultEnvironmentService","addPreserving(properties,path?)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService addPreserving(properties,path?) updates the environment store if property added preserving with path","status":"passed","title":"updates the environment store if property added preserving with path"},{"ancestorTitles":["DefaultEnvironmentService","addPreserving(properties,path?)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService addPreserving(properties,path?) updates the environment store if property added preserving with complex path","status":"passed","title":"updates the environment store if property added preserving with complex path"},{"ancestorTitles":["DefaultEnvironmentService","addPreserving(properties,path?)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService addPreserving(properties,path?) updates the environment store preserving existing values","status":"passed","title":"updates the environment store preserving existing values"},{"ancestorTitles":["DefaultEnvironmentService","addPreserving(properties,path?)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService addPreserving(properties,path?) updates the environment store preserving existing arrays","status":"passed","title":"updates the environment store preserving existing arrays"},{"ancestorTitles":["DefaultEnvironmentService","addPreserving(properties,path?)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService addPreserving(properties,path?) updates the environment store if immutable environment","status":"passed","title":"updates the environment store if immutable environment"},{"ancestorTitles":["DefaultEnvironmentService","addPreserving(properties,path?)"],"duration":0,"failureMessages":[],"fullName":"DefaultEnvironmentService addPreserving(properties,path?) returns {code:400,value,path,error} if invalid path","status":"passed","title":"returns {code:400,value,path,error} if invalid path"},{"ancestorTitles":["DefaultEnvironmentService","addPreserving(properties,path?)"],"duration":0,"failureMessages":[],"fullName":"DefaultEnvironmentService addPreserving(properties,path?) ignores the operation if invalid path","status":"passed","title":"ignores the operation if invalid path"},{"ancestorTitles":["DefaultEnvironmentService","addPreserving(properties,path?)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService addPreserving(properties,path?) returns {code:460,value,error,path?} if store error","status":"passed","title":"returns {code:460,value,error,path?} if store error"},{"ancestorTitles":["DefaultEnvironmentService","merge(properties,path?)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService merge(properties,path?) returns {code:200,value} if property merged","status":"passed","title":"returns {code:200,value} if property merged"},{"ancestorTitles":["DefaultEnvironmentService","merge(properties,path?)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService merge(properties,path?) updates the environment store if property merged","status":"passed","title":"updates the environment store if property merged"},{"ancestorTitles":["DefaultEnvironmentService","merge(properties,path?)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService merge(properties,path?) returns {code:200,value,path} if property merged with path","status":"passed","title":"returns {code:200,value,path} if property merged with path"},{"ancestorTitles":["DefaultEnvironmentService","merge(properties,path?)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService merge(properties,path?) updates the environment store if property merged with path","status":"passed","title":"updates the environment store if property merged with path"},{"ancestorTitles":["DefaultEnvironmentService","merge(properties,path?)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService merge(properties,path?) updates the environment store if property merged with complex path","status":"passed","title":"updates the environment store if property merged with complex path"},{"ancestorTitles":["DefaultEnvironmentService","merge(properties,path?)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService merge(properties,path?) updates the environment store merging and overwriting existing values","status":"passed","title":"updates the environment store merging and overwriting existing values"},{"ancestorTitles":["DefaultEnvironmentService","merge(properties,path?)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService merge(properties,path?) updates the environment store merging existing arrays","status":"passed","title":"updates the environment store merging existing arrays"},{"ancestorTitles":["DefaultEnvironmentService","merge(properties,path?)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService merge(properties,path?) updates the environment store if immutable environment","status":"passed","title":"updates the environment store if immutable environment"},{"ancestorTitles":["DefaultEnvironmentService","merge(properties,path?)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService merge(properties,path?) returns {code:400,value,path,error} if invalid path","status":"passed","title":"returns {code:400,value,path,error} if invalid path"},{"ancestorTitles":["DefaultEnvironmentService","merge(properties,path?)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService merge(properties,path?) ignores the operation if invalid path","status":"passed","title":"ignores the operation if invalid path"},{"ancestorTitles":["DefaultEnvironmentService","merge(properties,path?)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService merge(properties,path?) returns {code:460,value,error,path?} if store error","status":"passed","title":"returns {code:460,value,error,path?} if store error"},{"ancestorTitles":["DefaultEnvironmentService","mergePreserving(properties,path?)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService mergePreserving(properties,path?) returns {code:200,value} if property merged preserving","status":"passed","title":"returns {code:200,value} if property merged preserving"},{"ancestorTitles":["DefaultEnvironmentService","mergePreserving(properties,path?)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService mergePreserving(properties,path?) updates the environment store if property merged preserving","status":"passed","title":"updates the environment store if property merged preserving"},{"ancestorTitles":["DefaultEnvironmentService","mergePreserving(properties,path?)"],"duration":0,"failureMessages":[],"fullName":"DefaultEnvironmentService mergePreserving(properties,path?) returns {code:200,value,path} if property merged preserving with path","status":"passed","title":"returns {code:200,value,path} if property merged preserving with path"},{"ancestorTitles":["DefaultEnvironmentService","mergePreserving(properties,path?)"],"duration":3,"failureMessages":[],"fullName":"DefaultEnvironmentService mergePreserving(properties,path?) updates the environment store if property merged preserving with path","status":"passed","title":"updates the environment store if property merged preserving with path"},{"ancestorTitles":["DefaultEnvironmentService","mergePreserving(properties,path?)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService mergePreserving(properties,path?) updates the environment store if property merged preserving with complex path","status":"passed","title":"updates the environment store if property merged preserving with complex path"},{"ancestorTitles":["DefaultEnvironmentService","mergePreserving(properties,path?)"],"duration":4,"failureMessages":[],"fullName":"DefaultEnvironmentService mergePreserving(properties,path?) updates the environment store merging and preserving existing values","status":"passed","title":"updates the environment store merging and preserving existing values"},{"ancestorTitles":["DefaultEnvironmentService","mergePreserving(properties,path?)"],"duration":2,"failureMessages":[],"fullName":"DefaultEnvironmentService mergePreserving(properties,path?) updates the environment store merging existing arrays","status":"passed","title":"updates the environment store merging existing arrays"},{"ancestorTitles":["DefaultEnvironmentService","mergePreserving(properties,path?)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService mergePreserving(properties,path?) updates the environment store if immutable environment","status":"passed","title":"updates the environment store if immutable environment"},{"ancestorTitles":["DefaultEnvironmentService","mergePreserving(properties,path?)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService mergePreserving(properties,path?) returns {code:400,value,path,error} if invalid path","status":"passed","title":"returns {code:400,value,path,error} if invalid path"},{"ancestorTitles":["DefaultEnvironmentService","mergePreserving(properties,path?)"],"duration":0,"failureMessages":[],"fullName":"DefaultEnvironmentService mergePreserving(properties,path?) ignores the operation if invalid path","status":"passed","title":"ignores the operation if invalid path"},{"ancestorTitles":["DefaultEnvironmentService","mergePreserving(properties,path?)"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentService mergePreserving(properties,path?) returns {code:460,value,error,path?} if store error","status":"passed","title":"returns {code:460,value,error,path?} if store error"}]},{"numFailingTests":0,"numPassingTests":22,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1681381892366,"runtime":2050,"slow":false,"start":1681381890316},"testFilePath":"/home/runner/work/kuoki/kuoki/packages/environment/src/lib/source/environment-source.interface.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["EnvironmentSource integration with EnvironmentLoader","load() and isRequired"],"duration":29,"failureMessages":[],"fullName":"EnvironmentSource integration with EnvironmentLoader load() and isRequired resolves after all required sources are completed","status":"passed","title":"resolves after all required sources are completed"},{"ancestorTitles":["EnvironmentSource integration with EnvironmentLoader","load() and isRequired"],"duration":14,"failureMessages":[],"fullName":"EnvironmentSource integration with EnvironmentLoader load() and isRequired never resolves if a required source doesn't complete","status":"passed","title":"never resolves if a required source doesn't complete"},{"ancestorTitles":["EnvironmentSource integration with EnvironmentLoader","load() and isRequired"],"duration":12,"failureMessages":[],"fullName":"EnvironmentSource integration with EnvironmentLoader load() and isRequired rejects after a required source error","status":"passed","title":"rejects after a required source error"},{"ancestorTitles":["EnvironmentSource integration with EnvironmentLoader","load() and isRequired"],"duration":11,"failureMessages":[],"fullName":"EnvironmentSource integration with EnvironmentLoader load() and isRequired resolves after a no required source error","status":"passed","title":"resolves after a no required source error"},{"ancestorTitles":["EnvironmentSource integration with EnvironmentLoader","load() and isOrdered"],"duration":14,"failureMessages":[],"fullName":"EnvironmentSource integration with EnvironmentLoader load() and isOrdered wait for another source to complete to start the load","status":"passed","title":"wait for another source to complete to start the load"},{"ancestorTitles":["EnvironmentSource integration with EnvironmentLoader","load() and isOrdered"],"duration":10,"failureMessages":[],"fullName":"EnvironmentSource integration with EnvironmentLoader load() and isOrdered unordered sources add all properties at once","status":"passed","title":"unordered sources add all properties at once"},{"ancestorTitles":["EnvironmentSource integration with EnvironmentLoader","load() and isOrdered"],"duration":29,"failureMessages":[],"fullName":"EnvironmentSource integration with EnvironmentLoader load() and isOrdered never loads if previous ordered source doesn't complete","status":"passed","title":"never loads if previous ordered source doesn't complete"},{"ancestorTitles":["EnvironmentSource integration with EnvironmentLoader","load() and isOrdered"],"duration":8,"failureMessages":[],"fullName":"EnvironmentSource integration with EnvironmentLoader load() and isOrdered ignore errors and continues with the next ordered source","status":"passed","title":"ignore errors and continues with the next ordered source"},{"ancestorTitles":["EnvironmentSource integration with EnvironmentLoader","load() and ignoreError"],"duration":9,"failureMessages":[],"fullName":"EnvironmentSource integration with EnvironmentLoader load() and ignoreError ignores the error if the required source throws","status":"passed","title":"ignores the error if the required source throws"},{"ancestorTitles":["EnvironmentSource integration with EnvironmentLoader","load() and strategy"],"duration":12,"failureMessages":[],"fullName":"EnvironmentSource integration with EnvironmentLoader load() and strategy adds the properties if SourceStrategy.ADD","status":"passed","title":"adds the properties if SourceStrategy.ADD"},{"ancestorTitles":["EnvironmentSource integration with EnvironmentLoader","load() and strategy"],"duration":8,"failureMessages":[],"fullName":"EnvironmentSource integration with EnvironmentLoader load() and strategy adds preserving the properties if SourceStrategy.ADD_PRESERVING","status":"passed","title":"adds preserving the properties if SourceStrategy.ADD_PRESERVING"},{"ancestorTitles":["EnvironmentSource integration with EnvironmentLoader","load() and strategy"],"duration":7,"failureMessages":[],"fullName":"EnvironmentSource integration with EnvironmentLoader load() and strategy merges the properties if SourceStrategy.MERGE","status":"passed","title":"merges the properties if SourceStrategy.MERGE"},{"ancestorTitles":["EnvironmentSource integration with EnvironmentLoader","load() and strategy"],"duration":7,"failureMessages":[],"fullName":"EnvironmentSource integration with EnvironmentLoader load() and strategy merges preserving the properties if SourceStrategy.MERGE_PRESERVING","status":"passed","title":"merges preserving the properties if SourceStrategy.MERGE_PRESERVING"},{"ancestorTitles":["EnvironmentSource integration with EnvironmentLoader","load() and path"],"duration":9,"failureMessages":[],"fullName":"EnvironmentSource integration with EnvironmentLoader load() and path sets the properties using path","status":"passed","title":"sets the properties using path"},{"ancestorTitles":["EnvironmentSource integration with EnvironmentLoader","load() and mapFn()"],"duration":7,"failureMessages":[],"fullName":"EnvironmentSource integration with EnvironmentLoader load() and mapFn() maps the value returned by load() before store it.","status":"passed","title":"maps the value returned by load() before store it."},{"ancestorTitles":["EnvironmentSource integration with EnvironmentLoader","load() and errorHandler()"],"duration":4,"failureMessages":[],"fullName":"EnvironmentSource integration with EnvironmentLoader load() and errorHandler() returns an environment state on error","status":"passed","title":"returns an environment state on error"},{"ancestorTitles":["EnvironmentSource integration with EnvironmentLoader","load() and errorHandler()"],"duration":12,"failureMessages":[],"fullName":"EnvironmentSource integration with EnvironmentLoader load() and errorHandler() executes aside code","status":"passed","title":"executes aside code"},{"ancestorTitles":["EnvironmentSource integration with EnvironmentLoader","load() and errorHandler()"],"duration":16,"failureMessages":[],"fullName":"EnvironmentSource integration with EnvironmentLoader load() and errorHandler() throws a custom error","status":"passed","title":"throws a custom error"},{"ancestorTitles":["EnvironmentSource integration with EnvironmentLoader","load() returned types"],"duration":4,"failureMessages":[],"fullName":"EnvironmentSource integration with EnvironmentLoader load() returned types supports Promise","status":"passed","title":"supports Promise"},{"ancestorTitles":["EnvironmentSource integration with EnvironmentLoader","load() returned types"],"duration":8,"failureMessages":[],"fullName":"EnvironmentSource integration with EnvironmentLoader load() returned types supports Observable","status":"passed","title":"supports Observable"},{"ancestorTitles":["EnvironmentSource integration with EnvironmentLoader","load() returned types"],"duration":3,"failureMessages":[],"fullName":"EnvironmentSource integration with EnvironmentLoader load() returned types supports Array","status":"passed","title":"supports Array"},{"ancestorTitles":["EnvironmentSource integration with EnvironmentLoader","load() returned types"],"duration":4,"failureMessages":[],"fullName":"EnvironmentSource integration with EnvironmentLoader load() returned types supports EnvironmentState","status":"passed","title":"supports EnvironmentState"}]},{"numFailingTests":0,"numPassingTests":43,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1681381893651,"runtime":1256,"slow":false,"start":1681381892395},"testFilePath":"/home/runner/work/kuoki/kuoki/packages/environment/src/lib/query/environment-query.application.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["EnvironmentQuery"],"duration":9,"failureMessages":[],"fullName":"EnvironmentQuery getAll$() returns all the distinct environment properties as Observable","status":"passed","title":"getAll$() returns all the distinct environment properties as Observable"},{"ancestorTitles":["EnvironmentQuery"],"duration":2,"failureMessages":[],"fullName":"EnvironmentQuery getAll$() returns always the last value","status":"passed","title":"getAll$() returns always the last value"},{"ancestorTitles":["EnvironmentQuery"],"duration":16,"failureMessages":[],"fullName":"EnvironmentQuery getAllAsync() returns the first non empty set of environment properties as Promise","status":"passed","title":"getAllAsync() returns the first non empty set of environment properties as Promise"},{"ancestorTitles":["EnvironmentQuery"],"duration":1,"failureMessages":[],"fullName":"EnvironmentQuery getAll(path) returns all the environment properties","status":"passed","title":"getAll(path) returns all the environment properties"},{"ancestorTitles":["EnvironmentQuery"],"duration":3,"failureMessages":[],"fullName":"EnvironmentQuery containsAll$(...paths) returns if all the distinct environment property paths are available for resolution as Observable","status":"passed","title":"containsAll$(...paths) returns if all the distinct environment property paths are available for resolution as Observable"},{"ancestorTitles":["EnvironmentQuery"],"duration":1,"failureMessages":[],"fullName":"EnvironmentQuery containsAll$(...paths) returns always the last value","status":"passed","title":"containsAll$(...paths) returns always the last value"},{"ancestorTitles":["EnvironmentQuery"],"duration":12,"failureMessages":[],"fullName":"EnvironmentQuery containsAllAsync(...paths) returns true as Promise when all environment property paths exists","status":"passed","title":"containsAllAsync(...paths) returns true as Promise when all environment property paths exists"},{"ancestorTitles":["EnvironmentQuery"],"duration":1,"failureMessages":[],"fullName":"EnvironmentQuery containsAll(...paths) returns true if all the environment property paths exists","status":"passed","title":"containsAll(...paths) returns true if all the environment property paths exists"},{"ancestorTitles":["EnvironmentQuery"],"duration":1,"failureMessages":[],"fullName":"EnvironmentQuery containsAll(...paths) returns false if an environment property path doesn't exist","status":"passed","title":"containsAll(...paths) returns false if an environment property path doesn't exist"},{"ancestorTitles":["EnvironmentQuery"],"duration":3,"failureMessages":[],"fullName":"EnvironmentQuery containsSome$(...paths) returns if some distinct environment property paths are available for resolution as Observable","status":"passed","title":"containsSome$(...paths) returns if some distinct environment property paths are available for resolution as Observable"},{"ancestorTitles":["EnvironmentQuery"],"duration":1,"failureMessages":[],"fullName":"EnvironmentQuery containsSome$(...paths) returns always the last value","status":"passed","title":"containsSome$(...paths) returns always the last value"},{"ancestorTitles":["EnvironmentQuery"],"duration":10,"failureMessages":[],"fullName":"EnvironmentQuery containsSomeAsync(...paths) returns true as Promise when some environment property paths exists","status":"passed","title":"containsSomeAsync(...paths) returns true as Promise when some environment property paths exists"},{"ancestorTitles":["EnvironmentQuery"],"duration":1,"failureMessages":[],"fullName":"EnvironmentQuery containsSome(...paths) returns true if some environment property paths exists","status":"passed","title":"containsSome(...paths) returns true if some environment property paths exists"},{"ancestorTitles":["EnvironmentQuery"],"duration":1,"failureMessages":[],"fullName":"EnvironmentQuery containsSome(...paths) returns false if all the environment property paths doesn't exist","status":"passed","title":"containsSome(...paths) returns false if all the environment property paths doesn't exist"},{"ancestorTitles":["EnvironmentQuery"],"duration":1,"failureMessages":[],"fullName":"EnvironmentQuery get$(path) returns the distinct environment property at path as Observable","status":"passed","title":"get$(path) returns the distinct environment property at path as Observable"},{"ancestorTitles":["EnvironmentQuery"],"duration":1,"failureMessages":[],"fullName":"EnvironmentQuery get$(path) returns always the last value","status":"passed","title":"get$(path) returns always the last value"},{"ancestorTitles":["EnvironmentQuery"],"duration":1,"failureMessages":[],"fullName":"EnvironmentQuery get$(path,{defaultValue}) returns the default value if the path cannot be resolved","status":"passed","title":"get$(path,{defaultValue}) returns the default value if the path cannot be resolved"},{"ancestorTitles":["EnvironmentQuery"],"duration":1,"failureMessages":[],"fullName":"EnvironmentQuery get$(path,{targetType}) returns the typed environment property at path","status":"passed","title":"get$(path,{targetType}) returns the typed environment property at path"},{"ancestorTitles":["EnvironmentQuery"],"duration":2,"failureMessages":[],"fullName":"EnvironmentQuery get$(path,{transpile}) returns the transpiled environment property at path","status":"passed","title":"get$(path,{transpile}) returns the transpiled environment property at path"},{"ancestorTitles":["EnvironmentQuery"],"duration":1,"failureMessages":[],"fullName":"EnvironmentQuery get$(path,{defaultValue,targetType,transpile}) returns the modified environment property at path","status":"passed","title":"get$(path,{defaultValue,targetType,transpile}) returns the modified environment property at path"},{"ancestorTitles":["EnvironmentQuery"],"duration":18,"failureMessages":[],"fullName":"EnvironmentQuery getAsync(path) returns the non nil environment property at path","status":"passed","title":"getAsync(path) returns the non nil environment property at path"},{"ancestorTitles":["EnvironmentQuery"],"duration":6,"failureMessages":[],"fullName":"EnvironmentQuery getAsync(path, dueTime) returns Promise undefined id dueTime and no property at path","status":"passed","title":"getAsync(path, dueTime) returns Promise undefined id dueTime and no property at path"},{"ancestorTitles":["EnvironmentQuery"],"duration":7,"failureMessages":[],"fullName":"EnvironmentQuery getAsync(path,{defaultValue}) returns the default value if the path cannot be resolved","status":"passed","title":"getAsync(path,{defaultValue}) returns the default value if the path cannot be resolved"},{"ancestorTitles":["EnvironmentQuery"],"duration":11,"failureMessages":[],"fullName":"EnvironmentQuery getAsync(path,{targetType}) returns the typed environment property at path","status":"passed","title":"getAsync(path,{targetType}) returns the typed environment property at path"},{"ancestorTitles":["EnvironmentQuery"],"duration":11,"failureMessages":[],"fullName":"EnvironmentQuery getAsync(path,{transpile}) returns the transpiled environment property at path","status":"passed","title":"getAsync(path,{transpile}) returns the transpiled environment property at path"},{"ancestorTitles":["EnvironmentQuery"],"duration":7,"failureMessages":[],"fullName":"EnvironmentQuery getAsync(path,{defaultValue,targetType,transpile}) returns the modified environment property at path","status":"passed","title":"getAsync(path,{defaultValue,targetType,transpile}) returns the modified environment property at path"},{"ancestorTitles":["EnvironmentQuery"],"duration":0,"failureMessages":[],"fullName":"EnvironmentQuery get(path) returns the environment property at path.","status":"passed","title":"get(path) returns the environment property at path."},{"ancestorTitles":["EnvironmentQuery"],"duration":0,"failureMessages":[],"fullName":"EnvironmentQuery get(path) returns undefined if the path cannot be resolved","status":"passed","title":"get(path) returns undefined if the path cannot be resolved"},{"ancestorTitles":["EnvironmentQuery"],"duration":0,"failureMessages":[],"fullName":"EnvironmentQuery get(path,{defaultValue}) returns the default value if the path cannot be resolved","status":"passed","title":"get(path,{defaultValue}) returns the default value if the path cannot be resolved"},{"ancestorTitles":["EnvironmentQuery"],"duration":1,"failureMessages":[],"fullName":"EnvironmentQuery get(path,{targetType}) returns the typed environment property at path","status":"passed","title":"get(path,{targetType}) returns the typed environment property at path"},{"ancestorTitles":["EnvironmentQuery"],"duration":1,"failureMessages":[],"fullName":"EnvironmentQuery get(path,{required:true}) returns environment property at path if exists","status":"passed","title":"get(path,{required:true}) returns environment property at path if exists"},{"ancestorTitles":["EnvironmentQuery"],"duration":1,"failureMessages":[],"fullName":"EnvironmentQuery get(path,{required:true}) throws error if the path cannot be resolved","status":"passed","title":"get(path,{required:true}) throws error if the path cannot be resolved"},{"ancestorTitles":["EnvironmentQuery"],"duration":1,"failureMessages":[],"fullName":"EnvironmentQuery get(path,{required:false}) returns undefined if the path cannot be resolved","status":"passed","title":"get(path,{required:false}) returns undefined if the path cannot be resolved"},{"ancestorTitles":["EnvironmentQuery"],"duration":1,"failureMessages":[],"fullName":"EnvironmentQuery get(path,{transpile}) returns the transpiled environment property at path","status":"passed","title":"get(path,{transpile}) returns the transpiled environment property at path"},{"ancestorTitles":["EnvironmentQuery"],"duration":1,"failureMessages":[],"fullName":"EnvironmentQuery get(path,{defaultValue,targetType,transpile}) returns the modified environment property at path","status":"passed","title":"get(path,{defaultValue,targetType,transpile}) returns the modified environment property at path"},{"ancestorTitles":["EnvironmentQuery","transpile options"],"duration":1,"failureMessages":[],"fullName":"EnvironmentQuery transpile options {transpile} returns transpiled with any type of space in the interpolation","status":"passed","title":"{transpile} returns transpiled with any type of space in the interpolation"},{"ancestorTitles":["EnvironmentQuery","transpile options"],"duration":1,"failureMessages":[],"fullName":"EnvironmentQuery transpile options {transpile} returns transpiled object as string","status":"passed","title":"{transpile} returns transpiled object as string"},{"ancestorTitles":["EnvironmentQuery","transpile options"],"duration":1,"failureMessages":[],"fullName":"EnvironmentQuery transpile options {transpile} returns transpiled invalid object","status":"passed","title":"{transpile} returns transpiled invalid object"},{"ancestorTitles":["EnvironmentQuery","transpile options"],"duration":1,"failureMessages":[],"fullName":"EnvironmentQuery transpile options {transpile} returns transpiled with config.transpileEnvironment","status":"passed","title":"{transpile} returns transpiled with config.transpileEnvironment"},{"ancestorTitles":["EnvironmentQuery","transpile options"],"duration":1,"failureMessages":[],"fullName":"EnvironmentQuery transpile options {transpile,config:{transpileEnvironment}} returns transpiled with transpileEnvironment","status":"passed","title":"{transpile,config:{transpileEnvironment}} returns transpiled with transpileEnvironment"},{"ancestorTitles":["EnvironmentQuery","transpile options"],"duration":0,"failureMessages":[],"fullName":"EnvironmentQuery transpile options {transpile} returns transpiled with config.interpolation","status":"passed","title":"{transpile} returns transpiled with config.interpolation"},{"ancestorTitles":["EnvironmentQuery","transpile options"],"duration":0,"failureMessages":[],"fullName":"EnvironmentQuery transpile options {transpile,config:{interpolation}} returns transpiled with interpolation","status":"passed","title":"{transpile,config:{interpolation}} returns transpiled with interpolation"},{"ancestorTitles":["EnvironmentQuery","transpile options"],"duration":0,"failureMessages":[],"fullName":"EnvironmentQuery transpile options {transpile,config:{interpolation,transpileEnvironment}} returns transpiled with interpolation and transpileEnvironment","status":"passed","title":"{transpile,config:{interpolation,transpileEnvironment}} returns transpiled with interpolation and transpileEnvironment"}]},{"numFailingTests":0,"numPassingTests":17,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1681381894381,"runtime":714,"slow":false,"start":1681381893667},"testFilePath":"/home/runner/work/kuoki/kuoki/packages/environment/src/lib/loader/environment-loader.application.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["EnvironmentLoader"],"duration":18,"failureMessages":[],"fullName":"EnvironmentLoader throws if an environmnet source is invalid","status":"passed","title":"throws if an environmnet source is invalid"},{"ancestorTitles":["EnvironmentLoader"],"duration":12,"failureMessages":[],"fullName":"EnvironmentLoader throws if there are sources with duplicated ids","status":"passed","title":"throws if there are sources with duplicated ids"},{"ancestorTitles":["EnvironmentLoader"],"duration":3,"failureMessages":[],"fullName":"EnvironmentLoader .loaderSources is set on constructor with single source","status":"passed","title":".loaderSources is set on constructor with single source"},{"ancestorTitles":["EnvironmentLoader"],"duration":2,"failureMessages":[],"fullName":"EnvironmentLoader .loaderSources is set on constructor with sources array","status":"passed","title":".loaderSources is set on constructor with sources array"},{"ancestorTitles":["EnvironmentLoader"],"duration":2,"failureMessages":[],"fullName":"EnvironmentLoader .loaderSources sets source id with random id if undefined","status":"passed","title":".loaderSources sets source id with random id if undefined"},{"ancestorTitles":["EnvironmentLoader"],"duration":3,"failureMessages":[],"fullName":"EnvironmentLoader .sourcesSubject$ is set on constructor","status":"passed","title":".sourcesSubject$ is set on constructor"},{"ancestorTitles":["EnvironmentLoader"],"duration":14,"failureMessages":[],"fullName":"EnvironmentLoader .load() resolves immedialely if there are no required sources","status":"passed","title":".load() resolves immedialely if there are no required sources"},{"ancestorTitles":["EnvironmentLoader"],"duration":2,"failureMessages":[],"fullName":"EnvironmentLoader .load() rejects with Error","status":"passed","title":".load() rejects with Error"},{"ancestorTitles":["EnvironmentLoader"],"duration":1,"failureMessages":[],"fullName":"EnvironmentLoader .getSourceById(id) returns the source if exists","status":"passed","title":".getSourceById(id) returns the source if exists"},{"ancestorTitles":["EnvironmentLoader"],"duration":2,"failureMessages":[],"fullName":"EnvironmentLoader .getSourceById(id) returns undefined if the source doesn't exist","status":"passed","title":".getSourceById(id) returns undefined if the source doesn't exist"},{"ancestorTitles":["EnvironmentLoader"],"duration":21,"failureMessages":[],"fullName":"EnvironmentLoader .resolveLoad() forces the load to resolve","status":"passed","title":".resolveLoad() forces the load to resolve"},{"ancestorTitles":["EnvironmentLoader"],"duration":10,"failureMessages":[],"fullName":"EnvironmentLoader .rejectLoad() forces the load to reject","status":"passed","title":".rejectLoad() forces the load to reject"},{"ancestorTitles":["EnvironmentLoader"],"duration":9,"failureMessages":[],"fullName":"EnvironmentLoader .completeAllSources() completes all ongoing sources","status":"passed","title":".completeAllSources() completes all ongoing sources"},{"ancestorTitles":["EnvironmentLoader"],"duration":11,"failureMessages":[],"fullName":"EnvironmentLoader .completeSource(source) completes the source","status":"passed","title":".completeSource(source) completes the source"},{"ancestorTitles":["EnvironmentLoader"],"duration":8,"failureMessages":[],"fullName":"EnvironmentLoader .onDestroy() is called after all sources completes","status":"passed","title":".onDestroy() is called after all sources completes"},{"ancestorTitles":["EnvironmentLoader"],"duration":8,"failureMessages":[],"fullName":"EnvironmentLoader .onDestroy() stops all the streams","status":"passed","title":".onDestroy() stops all the streams"},{"ancestorTitles":["EnvironmentLoader"],"duration":3,"failureMessages":[],"fullName":"EnvironmentLoader .preAddProperties(properties, source) intercepts every value before store","status":"passed","title":".preAddProperties(properties, source) intercepts every value before store"}]},{"numFailingTests":0,"numPassingTests":27,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1681381894774,"runtime":360,"slow":false,"start":1681381894414},"testFilePath":"/home/runner/work/kuoki/kuoki/packages/environment/src/lib/source/is-environment-source.function.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["isEnvironmentSource(value)"],"duration":2,"failureMessages":[],"fullName":"isEnvironmentSource(value) returns false for null","status":"passed","title":"returns false for null"},{"ancestorTitles":["isEnvironmentSource(value)"],"duration":0,"failureMessages":[],"fullName":"isEnvironmentSource(value) returns false for undefined","status":"passed","title":"returns false for undefined"},{"ancestorTitles":["isEnvironmentSource(value)"],"duration":1,"failureMessages":[],"fullName":"isEnvironmentSource(value) returns false for {}","status":"passed","title":"returns false for {}"},{"ancestorTitles":["isEnvironmentSource(value)"],"duration":0,"failureMessages":[],"fullName":"isEnvironmentSource(value) returns true for valid {load}","status":"passed","title":"returns true for valid {load}"},{"ancestorTitles":["isEnvironmentSource(value)"],"duration":1,"failureMessages":[],"fullName":"isEnvironmentSource(value) returns false for invalid {load}","status":"passed","title":"returns false for invalid {load}"},{"ancestorTitles":["isEnvironmentSource(value)"],"duration":0,"failureMessages":[],"fullName":"isEnvironmentSource(value) returns false for {id}","status":"passed","title":"returns false for {id}"},{"ancestorTitles":["isEnvironmentSource(value)"],"duration":1,"failureMessages":[],"fullName":"isEnvironmentSource(value) returns true for valid {id,load}","status":"passed","title":"returns true for valid {id,load}"},{"ancestorTitles":["isEnvironmentSource(value)"],"duration":0,"failureMessages":[],"fullName":"isEnvironmentSource(value) returns false for invalid {id,load}","status":"passed","title":"returns false for invalid {id,load}"},{"ancestorTitles":["isEnvironmentSource(value)"],"duration":1,"failureMessages":[],"fullName":"isEnvironmentSource(value) returns false for {isRequired}","status":"passed","title":"returns false for {isRequired}"},{"ancestorTitles":["isEnvironmentSource(value)"],"duration":0,"failureMessages":[],"fullName":"isEnvironmentSource(value) returns true for valid {isRequired,load}","status":"passed","title":"returns true for valid {isRequired,load}"},{"ancestorTitles":["isEnvironmentSource(value)"],"duration":0,"failureMessages":[],"fullName":"isEnvironmentSource(value) returns false for invalid {isRequired,load}","status":"passed","title":"returns false for invalid {isRequired,load}"},{"ancestorTitles":["isEnvironmentSource(value)"],"duration":1,"failureMessages":[],"fullName":"isEnvironmentSource(value) returns false for {isOrdered}","status":"passed","title":"returns false for {isOrdered}"},{"ancestorTitles":["isEnvironmentSource(value)"],"duration":1,"failureMessages":[],"fullName":"isEnvironmentSource(value) returns true for valid {isOrdered,load}","status":"passed","title":"returns true for valid {isOrdered,load}"},{"ancestorTitles":["isEnvironmentSource(value)"],"duration":1,"failureMessages":[],"fullName":"isEnvironmentSource(value) returns false for invalid {isOrdered,load}","status":"passed","title":"returns false for invalid {isOrdered,load}"},{"ancestorTitles":["isEnvironmentSource(value)"],"duration":0,"failureMessages":[],"fullName":"isEnvironmentSource(value) returns false for {ignoreError}","status":"passed","title":"returns false for {ignoreError}"},{"ancestorTitles":["isEnvironmentSource(value)"],"duration":1,"failureMessages":[],"fullName":"isEnvironmentSource(value) returns true for valid {ignoreError,load}","status":"passed","title":"returns true for valid {ignoreError,load}"},{"ancestorTitles":["isEnvironmentSource(value)"],"duration":0,"failureMessages":[],"fullName":"isEnvironmentSource(value) returns false for invalid {ignoreError,load}","status":"passed","title":"returns false for invalid {ignoreError,load}"},{"ancestorTitles":["isEnvironmentSource(value)"],"duration":1,"failureMessages":[],"fullName":"isEnvironmentSource(value) returns false for {strategy}","status":"passed","title":"returns false for {strategy}"},{"ancestorTitles":["isEnvironmentSource(value)"],"duration":0,"failureMessages":[],"fullName":"isEnvironmentSource(value) returns true for valid {strategy,load}","status":"passed","title":"returns true for valid {strategy,load}"},{"ancestorTitles":["isEnvironmentSource(value)"],"duration":1,"failureMessages":[],"fullName":"isEnvironmentSource(value) returns false for invalid {strategy,load}","status":"passed","title":"returns false for invalid {strategy,load}"},{"ancestorTitles":["isEnvironmentSource(value)"],"duration":0,"failureMessages":[],"fullName":"isEnvironmentSource(value) returns false for {path}","status":"passed","title":"returns false for {path}"},{"ancestorTitles":["isEnvironmentSource(value)"],"duration":1,"failureMessages":[],"fullName":"isEnvironmentSource(value) returns true for valid {path,load}","status":"passed","title":"returns true for valid {path,load}"},{"ancestorTitles":["isEnvironmentSource(value)"],"duration":0,"failureMessages":[],"fullName":"isEnvironmentSource(value) returns false for invalid {path,load}","status":"passed","title":"returns false for invalid {path,load}"},{"ancestorTitles":["isEnvironmentSource(value)"],"duration":1,"failureMessages":[],"fullName":"isEnvironmentSource(value) returns false for {mapFn}","status":"passed","title":"returns false for {mapFn}"},{"ancestorTitles":["isEnvironmentSource(value)"],"duration":5,"failureMessages":[],"fullName":"isEnvironmentSource(value) returns true for valid {mapFn,load}","status":"passed","title":"returns true for valid {mapFn,load}"},{"ancestorTitles":["isEnvironmentSource(value)"],"duration":0,"failureMessages":[],"fullName":"isEnvironmentSource(value) returns false for {errorHandler}","status":"passed","title":"returns false for {errorHandler}"},{"ancestorTitles":["isEnvironmentSource(value)"],"duration":0,"failureMessages":[],"fullName":"isEnvironmentSource(value) returns true for valid {errorHandler,load}","status":"passed","title":"returns true for valid {errorHandler,load}"}]},{"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1681381895218,"runtime":427,"slow":false,"start":1681381894791},"testFilePath":"/home/runner/work/kuoki/kuoki/packages/environment/src/lib/lifecycle-hooks/lifecycle-hooks.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["LifecycleHooks integration with EnvironmentLoader"],"duration":12,"failureMessages":[],"fullName":"LifecycleHooks integration with EnvironmentLoader executes hooks in order if resolves","status":"passed","title":"executes hooks in order if resolves"},{"ancestorTitles":["LifecycleHooks integration with EnvironmentLoader"],"duration":5,"failureMessages":[],"fullName":"LifecycleHooks integration with EnvironmentLoader executes hooks in order if rejects","status":"passed","title":"executes hooks in order if rejects"}]},{"numFailingTests":0,"numPassingTests":8,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1681381895606,"runtime":354,"slow":false,"start":1681381895252},"testFilePath":"/home/runner/work/kuoki/kuoki/packages/environment/src/lib/loader-source/loader-sources-factory.function.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["loaderSourcesFactory(sources?)"],"duration":3,"failureMessages":[],"fullName":"loaderSourcesFactory(sources?) () returns empty array","status":"passed","title":"() returns empty array"},{"ancestorTitles":["loaderSourcesFactory(sources?)"],"duration":0,"failureMessages":[],"fullName":"loaderSourcesFactory(sources?) (null) returns empty array","status":"passed","title":"(null) returns empty array"},{"ancestorTitles":["loaderSourcesFactory(sources?)"],"duration":1,"failureMessages":[],"fullName":"loaderSourcesFactory(sources?) (source) returns an array with one loader source","status":"passed","title":"(source) returns an array with one loader source"},{"ancestorTitles":["loaderSourcesFactory(sources?)"],"duration":0,"failureMessages":[],"fullName":"loaderSourcesFactory(sources?) (source[]) returns an array with multiple loader sources","status":"passed","title":"(source[]) returns an array with multiple loader sources"},{"ancestorTitles":["loaderSourcesFactory(sources?)"],"duration":3,"failureMessages":[],"fullName":"loaderSourcesFactory(sources?) returns with all defaults","status":"passed","title":"returns with all defaults"},{"ancestorTitles":["loaderSourcesFactory(sources?)"],"duration":1,"failureMessages":[],"fullName":"loaderSourcesFactory(sources?) returns with all custom","status":"passed","title":"returns with all custom"},{"ancestorTitles":["loaderSourcesFactory(sources?)"],"duration":8,"failureMessages":[],"fullName":"loaderSourcesFactory(sources?) throws if an environmnet source is invalid","status":"passed","title":"throws if an environmnet source is invalid"},{"ancestorTitles":["loaderSourcesFactory(sources?)"],"duration":2,"failureMessages":[],"fullName":"loaderSourcesFactory(sources?) throws if there are sources with duplicated ids","status":"passed","title":"throws if there are sources with duplicated ids"}]},{"numFailingTests":0,"numPassingTests":3,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1681381896195,"runtime":566,"slow":false,"start":1681381895629},"testFilePath":"/home/runner/work/kuoki/kuoki/packages/environment/src/lib/source/use-cases.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["EnvironmentSource Use Cases","fallback sources"],"duration":9,"failureMessages":[],"fullName":"EnvironmentSource Use Cases fallback sources using Promise catch","status":"passed","title":"using Promise catch"},{"ancestorTitles":["EnvironmentSource Use Cases","fallback sources"],"duration":1,"failureMessages":[],"fullName":"EnvironmentSource Use Cases fallback sources using RxJS catchError","status":"passed","title":"using RxJS catchError"},{"ancestorTitles":["EnvironmentSource Use Cases"],"duration":6,"failureMessages":[],"fullName":"EnvironmentSource Use Cases Use values from other sources","status":"passed","title":"Use values from other sources"}]},{"numFailingTests":0,"numPassingTests":14,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1681381896488,"runtime":260,"slow":false,"start":1681381896228},"testFilePath":"/home/runner/work/kuoki/kuoki/packages/environment/src/lib/path/is-path.function.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["isPath(value)"],"duration":2,"failureMessages":[],"fullName":"isPath(value) returns false if no string or Array","status":"passed","title":"returns false if no string or Array"},{"ancestorTitles":["isPath(value)"],"duration":0,"failureMessages":[],"fullName":"isPath(value) returns false if empty string \"\"","status":"passed","title":"returns false if empty string \"\""},{"ancestorTitles":["isPath(value)"],"duration":0,"failureMessages":[],"fullName":"isPath(value) returns false if empty Array","status":"passed","title":"returns false if empty Array"},{"ancestorTitles":["isPath(value)"],"duration":1,"failureMessages":[],"fullName":"isPath(value) returns true if contains ASCII letter (a-zA-Z)","status":"passed","title":"returns true if contains ASCII letter (a-zA-Z)"},{"ancestorTitles":["isPath(value)"],"duration":0,"failureMessages":[],"fullName":"isPath(value) returns true if contains number (0-9)","status":"passed","title":"returns true if contains number (0-9)"},{"ancestorTitles":["isPath(value)"],"duration":1,"failureMessages":[],"fullName":"isPath(value) returns true if contains underscore \"_\"","status":"passed","title":"returns true if contains underscore \"_\""},{"ancestorTitles":["isPath(value)"],"duration":0,"failureMessages":[],"fullName":"isPath(value) returns true if contains dollar \"$\"","status":"passed","title":"returns true if contains dollar \"$\""},{"ancestorTitles":["isPath(value)"],"duration":1,"failureMessages":[],"fullName":"isPath(value) returns false if starts with number (0-9)","status":"passed","title":"returns false if starts with number (0-9)"},{"ancestorTitles":["isPath(value)"],"duration":7,"failureMessages":[],"fullName":"isPath(value) returns false if key contains any other character","status":"passed","title":"returns false if key contains any other character"},{"ancestorTitles":["isPath(value)"],"duration":0,"failureMessages":[],"fullName":"isPath(value) returns true for valid dot-separated keys","status":"passed","title":"returns true for valid dot-separated keys"},{"ancestorTitles":["isPath(value)"],"duration":1,"failureMessages":[],"fullName":"isPath(value) returns false if any invalid dot-separated key","status":"passed","title":"returns false if any invalid dot-separated key"},{"ancestorTitles":["isPath(value)"],"duration":1,"failureMessages":[],"fullName":"isPath(value) returns true for valid Array keys","status":"passed","title":"returns true for valid Array keys"},{"ancestorTitles":["isPath(value)"],"duration":1,"failureMessages":[],"fullName":"isPath(value) returns false if Array contains dot-separated key","status":"passed","title":"returns false if Array contains dot-separated key"},{"ancestorTitles":["isPath(value)"],"duration":1,"failureMessages":[],"fullName":"isPath(value) returns false if any invalid Array key","status":"passed","title":"returns false if any invalid Array key"}]},{"numFailingTests":0,"numPassingTests":7,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1681381896857,"runtime":356,"slow":false,"start":1681381896501},"testFilePath":"/home/runner/work/kuoki/kuoki/packages/environment/src/lib/store/environment-store.application.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["DefaultEnvironmentStore","with default initial value"],"duration":3,"failureMessages":[],"fullName":"DefaultEnvironmentStore with default initial value is created with default initial state","status":"passed","title":"is created with default initial state"},{"ancestorTitles":["DefaultEnvironmentStore","with default initial value"],"duration":4,"failureMessages":[],"fullName":"DefaultEnvironmentStore with default initial value getAll$() returns all the environment properties as Observable","status":"passed","title":"getAll$() returns all the environment properties as Observable"},{"ancestorTitles":["DefaultEnvironmentStore","with default initial value"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentStore with default initial value getAll() returns the environment properties","status":"passed","title":"getAll() returns the environment properties"},{"ancestorTitles":["DefaultEnvironmentStore","with default initial value"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentStore with default initial value update() mutates the environment","status":"passed","title":"update() mutates the environment"},{"ancestorTitles":["DefaultEnvironmentStore","with default initial value"],"duration":1,"failureMessages":[],"fullName":"DefaultEnvironmentStore with default initial value reset() resets the environment to the initial value","status":"passed","title":"reset() resets the environment to the initial value"},{"ancestorTitles":["DefaultEnvironmentStore","with custom initial value"],"duration":0,"failureMessages":[],"fullName":"DefaultEnvironmentStore with custom initial value is created with custom initial state","status":"passed","title":"is created with custom initial state"},{"ancestorTitles":["DefaultEnvironmentStore","with custom initial value"],"duration":0,"failureMessages":[],"fullName":"DefaultEnvironmentStore with custom initial value reset() resets the environment to the initial value","status":"passed","title":"reset() resets the environment to the initial value"}]},{"numFailingTests":0,"numPassingTests":11,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1681381897180,"runtime":303,"slow":false,"start":1681381896877},"testFilePath":"/home/runner/work/kuoki/kuoki/packages/environment/src/lib/source/invalid-source.error.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["InvalidSourceError"],"duration":2,"failureMessages":[],"fullName":"InvalidSourceError name is InvalidSourceError","status":"passed","title":"name is InvalidSourceError"},{"ancestorTitles":["InvalidSourceError"],"duration":0,"failureMessages":[],"fullName":"InvalidSourceError message displayed with null","status":"passed","title":"message displayed with null"},{"ancestorTitles":["InvalidSourceError"],"duration":1,"failureMessages":[],"fullName":"InvalidSourceError message displayed with undefined","status":"passed","title":"message displayed with undefined"},{"ancestorTitles":["InvalidSourceError"],"duration":0,"failureMessages":[],"fullName":"InvalidSourceError message displayed with id","status":"passed","title":"message displayed with id"},{"ancestorTitles":["InvalidSourceError"],"duration":1,"failureMessages":[],"fullName":"InvalidSourceError message displayed with function name","status":"passed","title":"message displayed with function name"},{"ancestorTitles":["InvalidSourceError"],"duration":0,"failureMessages":[],"fullName":"InvalidSourceError message displayed with function var name","status":"passed","title":"message displayed with function var name"},{"ancestorTitles":["InvalidSourceError"],"duration":0,"failureMessages":[],"fullName":"InvalidSourceError message displayed with class name","status":"passed","title":"message displayed with class name"},{"ancestorTitles":["InvalidSourceError"],"duration":0,"failureMessages":[],"fullName":"InvalidSourceError message displayed with plain object body as string","status":"passed","title":"message displayed with plain object body as string"},{"ancestorTitles":["InvalidSourceError"],"duration":0,"failureMessages":[],"fullName":"InvalidSourceError message displayed with anonymous function name as string","status":"passed","title":"message displayed with anonymous function name as string"},{"ancestorTitles":["InvalidSourceError"],"duration":0,"failureMessages":[],"fullName":"InvalidSourceError message displayed as string","status":"passed","title":"message displayed as string"},{"ancestorTitles":["InvalidSourceError"],"duration":4,"failureMessages":[],"fullName":"InvalidSourceError stack is defined","status":"passed","title":"stack is defined"}]},{"numFailingTests":0,"numPassingTests":3,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1681381897557,"runtime":360,"slow":false,"start":1681381897197},"testFilePath":"/home/runner/work/kuoki/kuoki/packages/environment/src/lib/loader-source/loader-source-factory.function.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["loaderSourceFactory(source)"],"duration":5,"failureMessages":[],"fullName":"loaderSourceFactory(source) (source) returns with all defaults","status":"passed","title":"(source) returns with all defaults"},{"ancestorTitles":["loaderSourceFactory(source)"],"duration":15,"failureMessages":[],"fullName":"loaderSourceFactory(source) (source) returns with all custom","status":"passed","title":"(source) returns with all custom"},{"ancestorTitles":["loaderSourceFactory(source)"],"duration":7,"failureMessages":[],"fullName":"loaderSourceFactory(source) throws if an environmnet source is invalid","status":"passed","title":"throws if an environmnet source is invalid"}]},{"numFailingTests":0,"numPassingTests":3,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1681381898017,"runtime":443,"slow":false,"start":1681381897574},"testFilePath":"/home/runner/work/kuoki/kuoki/packages/environment/src/lib/loader/create-environment-loader.function.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["createEnvironmentLoader(service, sources?)"],"duration":6,"failureMessages":[],"fullName":"createEnvironmentLoader(service, sources?) (service) returns an EnvironmentLoader without sources","status":"passed","title":"(service) returns an EnvironmentLoader without sources"},{"ancestorTitles":["createEnvironmentLoader(service, sources?)"],"duration":3,"failureMessages":[],"fullName":"createEnvironmentLoader(service, sources?) (service, source) returns an EnvironmentLoader with a single source","status":"passed","title":"(service, source) returns an EnvironmentLoader with a single source"},{"ancestorTitles":["createEnvironmentLoader(service, sources?)"],"duration":2,"failureMessages":[],"fullName":"createEnvironmentLoader(service, sources?) (service, source[]) returns an EnvironmentLoader with an array of sources","status":"passed","title":"(service, source[]) returns an EnvironmentLoader with an array of sources"}]},{"numFailingTests":0,"numPassingTests":6,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1681381898852,"runtime":776,"slow":false,"start":1681381898076},"testFilePath":"/home/runner/work/kuoki/kuoki/packages/environment/src/lib/module/create-environment-module.function.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["createEnvironmentModule(sources?)"],"duration":5,"failureMessages":[],"fullName":"createEnvironmentModule(sources?) returns {store} as DefaultEnvironmentStore","status":"passed","title":"returns {store} as DefaultEnvironmentStore"},{"ancestorTitles":["createEnvironmentModule(sources?)"],"duration":1,"failureMessages":[],"fullName":"createEnvironmentModule(sources?) returns {service} as DefaultEnvironmentService","status":"passed","title":"returns {service} as DefaultEnvironmentService"},{"ancestorTitles":["createEnvironmentModule(sources?)"],"duration":1,"failureMessages":[],"fullName":"createEnvironmentModule(sources?) returns {query} as DefaultEnvironmentQuery","status":"passed","title":"returns {query} as DefaultEnvironmentQuery"},{"ancestorTitles":["createEnvironmentModule(sources?)"],"duration":1,"failureMessages":[],"fullName":"createEnvironmentModule(sources?) returns {loader} as DefaultEnvironmentLoader","status":"passed","title":"returns {loader} as DefaultEnvironmentLoader"},{"ancestorTitles":["createEnvironmentModule(sources?)"],"duration":10,"failureMessages":[],"fullName":"createEnvironmentModule(sources?) loads the properties","status":"passed","title":"loads the properties"},{"ancestorTitles":["createEnvironmentModule(sources?)"],"duration":21,"failureMessages":[],"fullName":"createEnvironmentModule(sources?) rejects if load rejects","status":"passed","title":"rejects if load rejects"}]},{"numFailingTests":0,"numPassingTests":4,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1681381899143,"runtime":257,"slow":false,"start":1681381898886},"testFilePath":"/home/runner/work/kuoki/kuoki/packages/environment/src/lib/path/overwrites-path.function.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["overwritesPath(path,environment)"],"duration":3,"failureMessages":[],"fullName":"overwritesPath(path,environment) returns true if any value in path is not an object","status":"passed","title":"returns true if any value in path is not an object"},{"ancestorTitles":["overwritesPath(path,environment)"],"duration":1,"failureMessages":[],"fullName":"overwritesPath(path,environment) returns false if is an invalid path","status":"passed","title":"returns false if is an invalid path"},{"ancestorTitles":["overwritesPath(path,environment)"],"duration":1,"failureMessages":[],"fullName":"overwritesPath(path,environment) returns false if path is not in environment","status":"passed","title":"returns false if path is not in environment"},{"ancestorTitles":["overwritesPath(path,environment)"],"duration":2,"failureMessages":[],"fullName":"overwritesPath(path,environment) returns false if all values in path are objects or nil","status":"passed","title":"returns false if all values in path are objects or nil"}]},{"numFailingTests":0,"numPassingTests":10,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1681381899388,"runtime":233,"slow":false,"start":1681381899155},"testFilePath":"/home/runner/work/kuoki/kuoki/packages/environment/src/lib/helpers/as-string.function.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["asString(value)"],"duration":3,"failureMessages":[],"fullName":"asString(value) returns string from string","status":"passed","title":"returns string from string"},{"ancestorTitles":["asString(value)"],"duration":1,"failureMessages":[],"fullName":"asString(value) returns string from number","status":"passed","title":"returns string from number"},{"ancestorTitles":["asString(value)"],"duration":0,"failureMessages":[],"fullName":"asString(value) returns string from boolean","status":"passed","title":"returns string from boolean"},{"ancestorTitles":["asString(value)"],"duration":0,"failureMessages":[],"fullName":"asString(value) returns string from null","status":"passed","title":"returns string from null"},{"ancestorTitles":["asString(value)"],"duration":1,"failureMessages":[],"fullName":"asString(value) returns string from Array","status":"passed","title":"returns string from Array"},{"ancestorTitles":["asString(value)"],"duration":1,"failureMessages":[],"fullName":"asString(value) returns string from Object","status":"passed","title":"returns string from Object"},{"ancestorTitles":["asString(value)"],"duration":0,"failureMessages":[],"fullName":"asString(value) returns string from Object with method","status":"passed","title":"returns string from Object with method"},{"ancestorTitles":["asString(value)"],"duration":1,"failureMessages":[],"fullName":"asString(value) returns string from Array of Objects","status":"passed","title":"returns string from Array of Objects"},{"ancestorTitles":["asString(value)"],"duration":0,"failureMessages":[],"fullName":"asString(value) returns string from Object with Arrays","status":"passed","title":"returns string from Object with Arrays"},{"ancestorTitles":["asString(value)"],"duration":0,"failureMessages":[],"fullName":"asString(value) returns string if TypeError converting an Object","status":"passed","title":"returns string if TypeError converting an Object"}]},{"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1681381899725,"runtime":323,"slow":false,"start":1681381899402},"testFilePath":"/home/runner/work/kuoki/kuoki/packages/environment/src/lib/query/create-environment-query.function.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["createEnvironmentQuery(store, config?)"],"duration":4,"failureMessages":[],"fullName":"createEnvironmentQuery(store, config?) (store) returns an EnvironmentQuery","status":"passed","title":"(store) returns an EnvironmentQuery"},{"ancestorTitles":["createEnvironmentQuery(store, config?)"],"duration":1,"failureMessages":[],"fullName":"createEnvironmentQuery(store, config?) (store,config) returns an EnvironmentQuery with custom config","status":"passed","title":"(store,config) returns an EnvironmentQuery with custom config"}]},{"numFailingTests":0,"numPassingTests":5,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1681381900000,"runtime":253,"slow":false,"start":1681381899747},"testFilePath":"/home/runner/work/kuoki/kuoki/packages/environment/src/lib/query/environment-query-config-factory.function.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["environmentConfigFactory(config?)"],"duration":3,"failureMessages":[],"fullName":"environmentConfigFactory(config?) () returns all the default values","status":"passed","title":"() returns all the default values"},{"ancestorTitles":["environmentConfigFactory(config?)"],"duration":1,"failureMessages":[],"fullName":"environmentConfigFactory(config?) (null) returns all the default values","status":"passed","title":"(null) returns all the default values"},{"ancestorTitles":["environmentConfigFactory(config?)"],"duration":1,"failureMessages":[],"fullName":"environmentConfigFactory(config?) ({}) returns all the default values","status":"passed","title":"({}) returns all the default values"},{"ancestorTitles":["environmentConfigFactory(config?)"],"duration":1,"failureMessages":[],"fullName":"environmentConfigFactory(config?) ({interpolation}) returns custom interpolation","status":"passed","title":"({interpolation}) returns custom interpolation"},{"ancestorTitles":["environmentConfigFactory(config?)"],"duration":0,"failureMessages":[],"fullName":"environmentConfigFactory(config?) ({transpileEnvironment}) returns custom value","status":"passed","title":"({transpileEnvironment}) returns custom value"}]},{"numFailingTests":0,"numPassingTests":3,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1681381900279,"runtime":268,"slow":false,"start":1681381900011},"testFilePath":"/home/runner/work/kuoki/kuoki/packages/environment/src/lib/helpers/mutable.function.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["mutable(value)"],"duration":3,"failureMessages":[],"fullName":"mutable(value) returns non object values as is","status":"passed","title":"returns non object values as is"},{"ancestorTitles":["mutable(value)"],"duration":2,"failureMessages":[],"fullName":"mutable(value) returns the property as mutable if is an object","status":"passed","title":"returns the property as mutable if is an object"},{"ancestorTitles":["mutable(value)"],"duration":2,"failureMessages":[],"fullName":"mutable(value) returns the property as mutable if is an Array","status":"passed","title":"returns the property as mutable if is an Array"}]},{"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1681381900619,"runtime":325,"slow":false,"start":1681381900294},"testFilePath":"/home/runner/work/kuoki/kuoki/packages/environment/src/lib/loader/sources-subject-factory.function.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["sourcesSubjectFactory(sources)"],"duration":2,"failureMessages":[],"fullName":"sourcesSubjectFactory(sources) returns a map without sources","status":"passed","title":"returns a map without sources"},{"ancestorTitles":["sourcesSubjectFactory(sources)"],"duration":1,"failureMessages":[],"fullName":"sourcesSubjectFactory(sources) returns a map with the sources id and a ReplaySubject","status":"passed","title":"returns a map with the sources id and a ReplaySubject"}]},{"numFailingTests":0,"numPassingTests":6,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1681381900855,"runtime":216,"slow":false,"start":1681381900639},"testFilePath":"/home/runner/work/kuoki/kuoki/packages/environment/src/lib/helpers/as-error.function.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["asError(error)"],"duration":2,"failureMessages":[],"fullName":"asError(error) returns an Error from Error","status":"passed","title":"returns an Error from Error"},{"ancestorTitles":["asError(error)"],"duration":1,"failureMessages":[],"fullName":"asError(error) returns an Error from string","status":"passed","title":"returns an Error from string"},{"ancestorTitles":["asError(error)"],"duration":0,"failureMessages":[],"fullName":"asError(error) returns an Error from number","status":"passed","title":"returns an Error from number"},{"ancestorTitles":["asError(error)"],"duration":0,"failureMessages":[],"fullName":"asError(error) returns an Error from boolean","status":"passed","title":"returns an Error from boolean"},{"ancestorTitles":["asError(error)"],"duration":1,"failureMessages":[],"fullName":"asError(error) returns an Error from null","status":"passed","title":"returns an Error from null"},{"ancestorTitles":["asError(error)"],"duration":0,"failureMessages":[],"fullName":"asError(error) returns an Error from Object","status":"passed","title":"returns an Error from Object"}]},{"numFailingTests":0,"numPassingTests":3,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1681381901084,"runtime":218,"slow":false,"start":1681381900866},"testFilePath":"/home/runner/work/kuoki/kuoki/packages/environment/src/lib/lifecycle-hooks/lifecycle-hook.function.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["lifecycleHook(obj,method,...args)"],"duration":3,"failureMessages":[],"fullName":"lifecycleHook(obj,method,...args) calls the method","status":"passed","title":"calls the method"},{"ancestorTitles":["lifecycleHook(obj,method,...args)"],"duration":0,"failureMessages":[],"fullName":"lifecycleHook(obj,method,...args) returns The method's return value if exists","status":"passed","title":"returns The method's return value if exists"},{"ancestorTitles":["lifecycleHook(obj,method,...args)"],"duration":1,"failureMessages":[],"fullName":"lifecycleHook(obj,method,...args) returns undefined if the method doesn't exist","status":"passed","title":"returns undefined if the method doesn't exist"}]},{"numFailingTests":0,"numPassingTests":4,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1681381901323,"runtime":228,"slow":false,"start":1681381901095},"testFilePath":"/home/runner/work/kuoki/kuoki/packages/environment/src/lib/path/suffix-path.function.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["suffixPath(path, preffix)"],"duration":3,"failureMessages":[],"fullName":"suffixPath(path, preffix) returns suffixed array from array path and array suffix","status":"passed","title":"returns suffixed array from array path and array suffix"},{"ancestorTitles":["suffixPath(path, preffix)"],"duration":1,"failureMessages":[],"fullName":"suffixPath(path, preffix) returns suffixed array from array path and string suffix","status":"passed","title":"returns suffixed array from array path and string suffix"},{"ancestorTitles":["suffixPath(path, preffix)"],"duration":1,"failureMessages":[],"fullName":"suffixPath(path, preffix) returns suffixed string from string path and string suffix","status":"passed","title":"returns suffixed string from string path and string suffix"},{"ancestorTitles":["suffixPath(path, preffix)"],"duration":0,"failureMessages":[],"fullName":"suffixPath(path, preffix) returns suffixed string from string path and array suffix","status":"passed","title":"returns suffixed string from string path and array suffix"}]},{"numFailingTests":0,"numPassingTests":4,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1681381901566,"runtime":229,"slow":false,"start":1681381901337},"testFilePath":"/home/runner/work/kuoki/kuoki/packages/environment/src/lib/path/prefix-path.function.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["prefixPath(path, preffix)"],"duration":3,"failureMessages":[],"fullName":"prefixPath(path, preffix) returns prefixed array from array path and array prefix","status":"passed","title":"returns prefixed array from array path and array prefix"},{"ancestorTitles":["prefixPath(path, preffix)"],"duration":1,"failureMessages":[],"fullName":"prefixPath(path, preffix) returns prefixed array from array path and string prefix","status":"passed","title":"returns prefixed array from array path and string prefix"},{"ancestorTitles":["prefixPath(path, preffix)"],"duration":0,"failureMessages":[],"fullName":"prefixPath(path, preffix) returns prefixed string from string path and string prefix","status":"passed","title":"returns prefixed string from string path and string prefix"},{"ancestorTitles":["prefixPath(path, preffix)"],"duration":0,"failureMessages":[],"fullName":"prefixPath(path, preffix) returns prefixed string from string path and array prefix","status":"passed","title":"returns prefixed string from string path and array prefix"}]},{"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1681381901848,"runtime":270,"slow":false,"start":1681381901578},"testFilePath":"/home/runner/work/kuoki/kuoki/packages/environment/src/lib/store/create-environment-store.function.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["createEnvironmentStore(initialState?)"],"duration":2,"failureMessages":[],"fullName":"createEnvironmentStore(initialState?) () returns a DefaultEnvironmentStore with the default initial state '{}' ","status":"passed","title":"() returns a DefaultEnvironmentStore with the default initial state '{}' "},{"ancestorTitles":["createEnvironmentStore(initialState?)"],"duration":1,"failureMessages":[],"fullName":"createEnvironmentStore(initialState?) (initialState) returns a DefaultEnvironmentStore with initial state","status":"passed","title":"(initialState) returns a DefaultEnvironmentStore with initial state"}]},{"numFailingTests":0,"numPassingTests":1,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1681381902113,"runtime":251,"slow":false,"start":1681381901862},"testFilePath":"/home/runner/work/kuoki/kuoki/packages/environment/src/lib/helpers/delayed-promise.function.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["delayedPromise(value,dueTime)"],"duration":12,"failureMessages":[],"fullName":"delayedPromise(value,dueTime) creates a promise on dueTime","status":"passed","title":"creates a promise on dueTime"}]},{"numFailingTests":0,"numPassingTests":1,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1681381902445,"runtime":322,"slow":false,"start":1681381902123},"testFilePath":"/home/runner/work/kuoki/kuoki/packages/environment/src/lib/service/create-environment-service.function.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["createEnvironmentService(store)"],"duration":4,"failureMessages":[],"fullName":"createEnvironmentService(store) returns an EnvironmentService","status":"passed","title":"returns an EnvironmentService"}]},{"numFailingTests":0,"numPassingTests":1,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1681381902800,"runtime":331,"slow":false,"start":1681381902469},"testFilePath":"/home/runner/work/kuoki/kuoki/packages/environment/src/lib/helpers/filter-nil.operator.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["filterNil()"],"duration":5,"failureMessages":[],"fullName":"filterNil() emits items from the source Observable that are not null or undefined","status":"passed","title":"emits items from the source Observable that are not null or undefined"}]},{"numFailingTests":0,"numPassingTests":3,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1681381903049,"runtime":233,"slow":false,"start":1681381902816},"testFilePath":"/home/runner/work/kuoki/kuoki/packages/environment/src/lib/loader-source/duplicated-sources.error.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["DuplicatedSourcesError"],"duration":2,"failureMessages":[],"fullName":"DuplicatedSourcesError name is DuplicatedSourcesError","status":"passed","title":"name is DuplicatedSourcesError"},{"ancestorTitles":["DuplicatedSourcesError"],"duration":0,"failureMessages":[],"fullName":"DuplicatedSourcesError message displays the ids","status":"passed","title":"message displays the ids"},{"ancestorTitles":["DuplicatedSourcesError"],"duration":4,"failureMessages":[],"fullName":"DuplicatedSourcesError stack is defined","status":"passed","title":"stack is defined"}]},{"numFailingTests":0,"numPassingTests":3,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1681381903291,"runtime":232,"slow":false,"start":1681381903059},"testFilePath":"/home/runner/work/kuoki/kuoki/packages/environment/src/lib/path/path-doesnt-exist.error.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["PathDoesntExistError"],"duration":3,"failureMessages":[],"fullName":"PathDoesntExistError name is PathDoesntExistError","status":"passed","title":"name is PathDoesntExistError"},{"ancestorTitles":["PathDoesntExistError"],"duration":0,"failureMessages":[],"fullName":"PathDoesntExistError message converts Path as string","status":"passed","title":"message converts Path as string"},{"ancestorTitles":["PathDoesntExistError"],"duration":5,"failureMessages":[],"fullName":"PathDoesntExistError stack is defined","status":"passed","title":"stack is defined"}]},{"numFailingTests":0,"numPassingTests":3,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1681381903529,"runtime":228,"slow":false,"start":1681381903301},"testFilePath":"/home/runner/work/kuoki/kuoki/packages/environment/src/lib/helpers/if-defined.function.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["ifDefined(value,check)"],"duration":2,"failureMessages":[],"fullName":"ifDefined(value,check) returns true if value is null","status":"passed","title":"returns true if value is null"},{"ancestorTitles":["ifDefined(value,check)"],"duration":0,"failureMessages":[],"fullName":"ifDefined(value,check) returns true if value is undefined","status":"passed","title":"returns true if value is undefined"},{"ancestorTitles":["ifDefined(value,check)"],"duration":1,"failureMessages":[],"fullName":"ifDefined(value,check) returns check if value is defined","status":"passed","title":"returns check if value is defined"}]},{"numFailingTests":0,"numPassingTests":3,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1681381903773,"runtime":232,"slow":false,"start":1681381903541},"testFilePath":"/home/runner/work/kuoki/kuoki/packages/environment/src/lib/path/path-exists.error.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["PathExistsError"],"duration":2,"failureMessages":[],"fullName":"PathExistsError name is PathExistsError","status":"passed","title":"name is PathExistsError"},{"ancestorTitles":["PathExistsError"],"duration":0,"failureMessages":[],"fullName":"PathExistsError message converts Path as string","status":"passed","title":"message converts Path as string"},{"ancestorTitles":["PathExistsError"],"duration":4,"failureMessages":[],"fullName":"PathExistsError stack is defined","status":"passed","title":"stack is defined"}]},{"numFailingTests":0,"numPassingTests":3,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1681381904098,"runtime":312,"slow":false,"start":1681381903786},"testFilePath":"/home/runner/work/kuoki/kuoki/packages/environment/src/lib/path/invalid-path.error.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["InvalidPathError"],"duration":3,"failureMessages":[],"fullName":"InvalidPathError name is InvalidPathError","status":"passed","title":"name is InvalidPathError"},{"ancestorTitles":["InvalidPathError"],"duration":1,"failureMessages":[],"fullName":"InvalidPathError message converts paths to string","status":"passed","title":"message converts paths to string"},{"ancestorTitles":["InvalidPathError"],"duration":4,"failureMessages":[],"fullName":"InvalidPathError stack is defined","status":"passed","title":"stack is defined"}]},{"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1681381904328,"runtime":219,"slow":false,"start":1681381904109},"testFilePath":"/home/runner/work/kuoki/kuoki/packages/environment/src/lib/path/path-as-array.function.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["pathAsArray(path)"],"duration":3,"failureMessages":[],"fullName":"pathAsArray(path) returns the path as Array if is a string","status":"passed","title":"returns the path as Array if is a string"},{"ancestorTitles":["pathAsArray(path)"],"duration":1,"failureMessages":[],"fullName":"pathAsArray(path) returns the path as Array if is an Array","status":"passed","title":"returns the path as Array if is an Array"}]},{"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1681381904559,"runtime":218,"slow":false,"start":1681381904341},"testFilePath":"/home/runner/work/kuoki/kuoki/packages/environment/src/lib/path/path-as-string.function.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["pathAsString(path)"],"duration":2,"failureMessages":[],"fullName":"pathAsString(path) returns the path as string if is a string","status":"passed","title":"returns the path as string if is a string"},{"ancestorTitles":["pathAsString(path)"],"duration":0,"failureMessages":[],"fullName":"pathAsString(path) returns the path as string if is an Array","status":"passed","title":"returns the path as string if is an Array"}]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":true,"collectCoverage":true,"collectCoverageFrom":[],"coverageDirectory":"/home/runner/work/kuoki/kuoki/docs/environment/coverage/lcov-report","coverageProvider":"babel","coverageReporters":["html","lcov"],"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":false,"expand":false,"findRelatedTests":false,"forceExit":false,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":1,"noStackTrace":false,"nonFlagArgs":[],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":true,"projects":[],"reporters":[["default",{}],["/home/runner/work/kuoki/kuoki/node_modules/jest-html-reporters/index.js",{"publicPath":"docs/environment/coverage","filename":"index.html","pageTitle":"Environment Tests","expand":true,"hideIcon":true}]],"rootDir":"/home/runner/work/kuoki/kuoki/packages/environment","runTestsByPath":false,"seed":718687080,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPattern":"","testSequencer":"/home/runner/work/kuoki/kuoki/node_modules/@jest/test-sequencer/build/index.js","updateSnapshot":"none","useStderr":false,"watch":false,"watchAll":false,"watchman":true,"workerThreads":false,"coverageLinkPath":"lcov-report/lcov-report/index.html"},"endTime":1681381904564,"_reporterOptions":{"publicPath":"docs/environment/coverage","filename":"index.html","expand":true,"pageTitle":"Environment Tests","hideIcon":true,"testCommand":"","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false},"logInfoMapping":{},"attachInfos":{}})