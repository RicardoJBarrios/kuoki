window.jest_html_reporters_callback__({"numFailedTestSuites":0,"numFailedTests":0,"numPassedTestSuites":18,"numPassedTests":245,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":18,"numTotalTests":245,"startTime":1642976985109,"success":false,"testResults":[{"leaks":false,"numFailingTests":0,"numPassingTests":69,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1642976991159,"runtime":5501,"slow":true,"start":1642976985658},"skipped":false,"testFilePath":"/home/runner/work/kuoki/kuoki/packages/environment/src/lib/loader/environment-loader.application.spec.ts","testResults":[{"ancestorTitles":["EnvironmentStore"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentStore has getAll$() method","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"has getAll$() method"},{"ancestorTitles":["EnvironmentStore"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentStore has getAll() method","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"has getAll() method"},{"ancestorTitles":["EnvironmentStore"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentStore has update() method","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"has update() method"},{"ancestorTitles":["EnvironmentStore"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentStore has reset() method","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"has reset() method"},{"ancestorTitles":["EnvironmentLoader"],"duration":13,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader ['loaderSources'] is set on constructor","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"['loaderSources'] is set on constructor"},{"ancestorTitles":["EnvironmentLoader"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader .sourcesSubject$ is set on constructor","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":".sourcesSubject$ is set on constructor"},{"ancestorTitles":["EnvironmentLoader",".load()"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader .load() returns resolved Promise if no sources","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns resolved Promise if no sources"},{"ancestorTitles":["EnvironmentLoader",".load()"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader .load() returns resolved Promise on sources load","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns resolved Promise on sources load"},{"ancestorTitles":["EnvironmentLoader",".load()"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader .load() returns resolved Promise on source error","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns resolved Promise on source error"},{"ancestorTitles":["EnvironmentLoader",".load()"],"duration":36,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader .load() returns rejected Promise on requiredToLoad source error","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns rejected Promise on requiredToLoad source error"},{"ancestorTitles":["EnvironmentLoader",".load()"],"duration":24,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader .load() returns rejected Promise with message on requiredToLoad source error","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns rejected Promise with message on requiredToLoad source error"},{"ancestorTitles":["EnvironmentLoader",".resolveLoad()"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader .resolveLoad() forces the load to resolve","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"forces the load to resolve"},{"ancestorTitles":["EnvironmentLoader",".resolveLoad()"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader .resolveLoad() continues loading sources","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"continues loading sources"},{"ancestorTitles":["EnvironmentLoader",".rejectLoad()"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader .rejectLoad() forces the load to reject","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"forces the load to reject"},{"ancestorTitles":["EnvironmentLoader",".rejectLoad()"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader .rejectLoad() continues loading sources","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"continues loading sources"},{"ancestorTitles":["EnvironmentLoader",".completeAllSources()"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader .completeAllSources() forces the load to resolve","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"forces the load to resolve"},{"ancestorTitles":["EnvironmentLoader",".completeAllSources()"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader .completeAllSources() stops all ongoing source loads","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"stops all ongoing source loads"},{"ancestorTitles":["EnvironmentLoader",".completeSource(source)"],"duration":13,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader .completeSource(source) forces the load to resolve","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"forces the load to resolve"},{"ancestorTitles":["EnvironmentLoader",".completeSource(source)"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader .completeSource(source) stops the source load","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"stops the source load"},{"ancestorTitles":["EnvironmentLoader",".completeSource(source)"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader .completeSource(source) does nothing if the id doesn't exist","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"does nothing if the id doesn't exist"},{"ancestorTitles":["EnvironmentLoader",".completeSource(source)"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader .completeSource(source) doesn't throw error if source subject is not setted","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"doesn't throw error if source subject is not setted"},{"ancestorTitles":["EnvironmentLoader",".onDestroy()"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader .onDestroy() forces the load to resolve","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"forces the load to resolve"},{"ancestorTitles":["EnvironmentLoader",".onDestroy()"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader .onDestroy() stops all ongoing source loads","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"stops all ongoing source loads"},{"ancestorTitles":["EnvironmentLoader",".onDestroy()"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader .onDestroy() completes the load subject","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"completes the load subject"},{"ancestorTitles":["EnvironmentLoader",".onDestroy()"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader .onDestroy() completes the required to load subject","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"completes the required to load subject"},{"ancestorTitles":["EnvironmentLoader",".onDestroy()"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader .onDestroy() completes the sources subjects","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"completes the sources subjects"},{"ancestorTitles":["EnvironmentLoader","EnvironmentSource",".requiredToLoad"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader EnvironmentSource .requiredToLoad returns resolved Promise immedialely if no requiredToLoad","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns resolved Promise immedialely if no requiredToLoad"},{"ancestorTitles":["EnvironmentLoader","EnvironmentSource",".requiredToLoad"],"duration":13,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader EnvironmentSource .requiredToLoad returns resolved Promise after all requiredToLoad completes","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns resolved Promise after all requiredToLoad completes"},{"ancestorTitles":["EnvironmentLoader","EnvironmentSource",".requiredToLoad"],"duration":28,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader EnvironmentSource .requiredToLoad returns resolved Promise after multiple emits requiredToLoad completes","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns resolved Promise after multiple emits requiredToLoad completes"},{"ancestorTitles":["EnvironmentLoader","EnvironmentSource",".requiredToLoad"],"duration":53,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader EnvironmentSource .requiredToLoad doesn't return if infinite requiredToLoad source","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"doesn't return if infinite requiredToLoad source"},{"ancestorTitles":["EnvironmentLoader","EnvironmentSource",".requiredToLoad"],"duration":18,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader EnvironmentSource .requiredToLoad returns resolved Promise after load error","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns resolved Promise after load error"},{"ancestorTitles":["EnvironmentLoader","EnvironmentSource",".requiredToLoad"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader EnvironmentSource .requiredToLoad returns rejected Promise after requiredToLoad load error","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns rejected Promise after requiredToLoad load error"},{"ancestorTitles":["EnvironmentLoader","EnvironmentSource",".loadInOrder"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader EnvironmentSource .loadInOrder adds properties all at once if no loadInOrder sources","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"adds properties all at once if no loadInOrder sources"},{"ancestorTitles":["EnvironmentLoader","EnvironmentSource",".loadInOrder"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader EnvironmentSource .loadInOrder adds properties in order if loadInOrder and all completes","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"adds properties in order if loadInOrder and all completes"},{"ancestorTitles":["EnvironmentLoader","EnvironmentSource",".loadInOrder"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader EnvironmentSource .loadInOrder adds properties in order if loadInOrder waiting for multiple emit completes","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"adds properties in order if loadInOrder waiting for multiple emit completes"},{"ancestorTitles":["EnvironmentLoader","EnvironmentSource",".loadInOrder"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader EnvironmentSource .loadInOrder adds properties in order if loadInOrder and source never completes, but never load the next ordered source","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"adds properties in order if loadInOrder and source never completes, but never load the next ordered source"},{"ancestorTitles":["EnvironmentLoader","EnvironmentSource",".loadInOrder"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader EnvironmentSource .loadInOrder adds properties mixing loadInOrder and no loadInOrder sources","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"adds properties mixing loadInOrder and no loadInOrder sources"},{"ancestorTitles":["EnvironmentLoader","EnvironmentSource",".loadInOrder"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader EnvironmentSource .loadInOrder adds properties in order ignoring errors","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"adds properties in order ignoring errors"},{"ancestorTitles":["EnvironmentLoader","EnvironmentSource",".loadInOrder"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader EnvironmentSource .loadInOrder adds properties in order ignoring errors and completing multiple sources on error","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"adds properties in order ignoring errors and completing multiple sources on error"},{"ancestorTitles":["EnvironmentLoader","EnvironmentSource",".mergeProperties"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader EnvironmentSource .mergeProperties adds properties if no mergeProperties source","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"adds properties if no mergeProperties source"},{"ancestorTitles":["EnvironmentLoader","EnvironmentSource",".mergeProperties"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader EnvironmentSource .mergeProperties merges properties if mergeProperties source","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"merges properties if mergeProperties source"},{"ancestorTitles":["EnvironmentLoader","EnvironmentSource",".ignoreError"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader EnvironmentSource .ignoreError returns rejected Promise if requiredToLoad source error and no ignoreError","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns rejected Promise if requiredToLoad source error and no ignoreError"},{"ancestorTitles":["EnvironmentLoader","EnvironmentSource",".ignoreError"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader EnvironmentSource .ignoreError returns resolved Promise if requiredToLoad source error and ignoreError","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns resolved Promise if requiredToLoad source error and ignoreError"},{"ancestorTitles":["EnvironmentLoader","EnvironmentSource",".path"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader EnvironmentSource .path adds properties without path","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"adds properties without path"},{"ancestorTitles":["EnvironmentLoader","EnvironmentSource",".path"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader EnvironmentSource .path adds properties with path","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"adds properties with path"},{"ancestorTitles":["EnvironmentLoader","EnvironmentSource",".path"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader EnvironmentSource .path merges properties with mergeProperties and no path","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"merges properties with mergeProperties and no path"},{"ancestorTitles":["EnvironmentLoader","EnvironmentSource",".path"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader EnvironmentSource .path merges properties with mergeProperties and path","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"merges properties with mergeProperties and path"},{"ancestorTitles":["EnvironmentLoader","EnvironmentSource",".load()"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader EnvironmentSource .load() returns resolved Promise from Observable","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns resolved Promise from Observable"},{"ancestorTitles":["EnvironmentLoader","EnvironmentSource",".load()"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader EnvironmentSource .load() returns resolved Promise from Promise","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns resolved Promise from Promise"},{"ancestorTitles":["EnvironmentLoader","EnvironmentSource",".load()"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader EnvironmentSource .load() returns resolved Promise from Array","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns resolved Promise from Array"},{"ancestorTitles":["EnvironmentLoader","EnvironmentSource",".load()"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader EnvironmentSource .load() returns resolved Promise from multiple Array","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns resolved Promise from multiple Array"},{"ancestorTitles":["EnvironmentLoader","Middleware"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader Middleware preAddProperties(properties, source) is called with properties and source","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"preAddProperties(properties, source) is called with properties and source"},{"ancestorTitles":["EnvironmentLoader","Middleware"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader Middleware preAddProperties(properties, source) modifies the properties","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"preAddProperties(properties, source) modifies the properties"},{"ancestorTitles":["EnvironmentLoader","Lifecycle Hooks"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader Lifecycle Hooks executes load lifecycle hooks in order if no error","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"executes load lifecycle hooks in order if no error"},{"ancestorTitles":["EnvironmentLoader","Lifecycle Hooks"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader Lifecycle Hooks executes load lifecycle hooks in order if error","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"executes load lifecycle hooks in order if error"},{"ancestorTitles":["EnvironmentLoader","Lifecycle Hooks"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader Lifecycle Hooks executes source lifecycle hooks in order if no error","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"executes source lifecycle hooks in order if no error"},{"ancestorTitles":["EnvironmentLoader","Lifecycle Hooks"],"duration":19,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader Lifecycle Hooks executes multiple source lifecycle hooks in order if no error","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"executes multiple source lifecycle hooks in order if no error"},{"ancestorTitles":["EnvironmentLoader","Lifecycle Hooks"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader Lifecycle Hooks executes source lifecycle hooks in order if error","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"executes source lifecycle hooks in order if error"},{"ancestorTitles":["EnvironmentLoader","Lifecycle Hooks"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader Lifecycle Hooks executes full lifecycle hooks in order if no error","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"executes full lifecycle hooks in order if no error"},{"ancestorTitles":["EnvironmentLoader","Lifecycle Hooks"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader Lifecycle Hooks executes full lifecycle hooks in order if error","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"executes full lifecycle hooks in order if error"},{"ancestorTitles":["EnvironmentLoader","Lifecycle Hooks"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader Lifecycle Hooks onBeforeLoad() is called without args","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"onBeforeLoad() is called without args"},{"ancestorTitles":["EnvironmentLoader","Lifecycle Hooks"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader Lifecycle Hooks onAfterLoad() is called without args ","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"onAfterLoad() is called without args "},{"ancestorTitles":["EnvironmentLoader","Lifecycle Hooks"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader Lifecycle Hooks onAfterError(error) is called with error","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"onAfterError(error) is called with error"},{"ancestorTitles":["EnvironmentLoader","Lifecycle Hooks"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader Lifecycle Hooks onAfterComplete() is called without args ","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"onAfterComplete() is called without args "},{"ancestorTitles":["EnvironmentLoader","Lifecycle Hooks"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader Lifecycle Hooks onBeforeSourceLoad(source) is called with source","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"onBeforeSourceLoad(source) is called with source"},{"ancestorTitles":["EnvironmentLoader","Lifecycle Hooks"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader Lifecycle Hooks onBeforeSourceAdd(properties, source) is called with properties and source","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"onBeforeSourceAdd(properties, source) is called with properties and source"},{"ancestorTitles":["EnvironmentLoader","Lifecycle Hooks"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader Lifecycle Hooks onAfterSourceAdd(properties, source) is called with properties and source","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"onAfterSourceAdd(properties, source) is called with properties and source"},{"ancestorTitles":["EnvironmentLoader","Lifecycle Hooks"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader Lifecycle Hooks onAfterSourceError(error, source) is called with error and source","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"onAfterSourceError(error, source) is called with error and source"},{"ancestorTitles":["EnvironmentLoader","Lifecycle Hooks"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentLoader Lifecycle Hooks onAfterSourceComplete(source) is called with source","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"onAfterSourceComplete(source) is called with source"}],"displayName":{"color":"white","name":"environment"},"failureMessage":null},{"leaks":false,"numFailingTests":0,"numPassingTests":56,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1642976991935,"runtime":743,"slow":false,"start":1642976991192},"skipped":false,"testFilePath":"/home/runner/work/kuoki/kuoki/packages/environment/src/lib/service/environment-service.application.spec.ts","testResults":[{"ancestorTitles":["EnvironmentStore"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentStore has getAll$() method","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"has getAll$() method"},{"ancestorTitles":["EnvironmentStore"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentStore has getAll() method","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"has getAll() method"},{"ancestorTitles":["EnvironmentStore"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentStore has update() method","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"has update() method"},{"ancestorTitles":["EnvironmentStore"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentStore has reset() method","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"has reset() method"},{"ancestorTitles":["EnvironmentService","reset()"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentService reset() returns {code:205}","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns {code:205}"},{"ancestorTitles":["EnvironmentService","reset()"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentService reset() resets the environment store to the initial state","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"resets the environment store to the initial state"},{"ancestorTitles":["EnvironmentService","create(path, value)"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentService create(path, value) returns {code:201, path, value} if property created","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns {code:201, path, value} if property created"},{"ancestorTitles":["EnvironmentService","create(path, value)"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentService create(path, value) updates the environment store if property created","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"updates the environment store if property created"},{"ancestorTitles":["EnvironmentService","create(path, value)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentService create(path, value) returns {code:201, path, value} if path doesn't exist","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns {code:201, path, value} if path doesn't exist"},{"ancestorTitles":["EnvironmentService","create(path, value)"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentService create(path, value) updates the environment store if path doesn't exist","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"updates the environment store if path doesn't exist"},{"ancestorTitles":["EnvironmentService","create(path, value)"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentService create(path, value) updates the environment store if immutable environment","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"updates the environment store if immutable environment"},{"ancestorTitles":["EnvironmentService","create(path, value)"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentService create(path, value) returns {code:400, path, value} if invalid path","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns {code:400, path, value} if invalid path"},{"ancestorTitles":["EnvironmentService","create(path, value)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentService create(path, value) ignores the action if invalid path","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"ignores the action if invalid path"},{"ancestorTitles":["EnvironmentService","create(path, value)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentService create(path, value) returns {code:422, path, value} if property already exists","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns {code:422, path, value} if property already exists"},{"ancestorTitles":["EnvironmentService","create(path, value)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentService create(path, value) ignores the action if property already exists","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"ignores the action if property already exists"},{"ancestorTitles":["EnvironmentService","create(path, value)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentService create(path, value) returns {code:422, path, value} if path already exists","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns {code:422, path, value} if path already exists"},{"ancestorTitles":["EnvironmentService","create(path, value)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentService create(path, value) ignores the action if path already exists","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"ignores the action if path already exists"},{"ancestorTitles":["EnvironmentService","update(path, value)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentService update(path, value) returns {code:200, path, value} if property updated","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns {code:200, path, value} if property updated"},{"ancestorTitles":["EnvironmentService","update(path, value)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentService update(path, value) updates the environment store if property updated","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"updates the environment store if property updated"},{"ancestorTitles":["EnvironmentService","update(path, value)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentService update(path, value) updates the environment store if immutable environment","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"updates the environment store if immutable environment"},{"ancestorTitles":["EnvironmentService","update(path, value)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentService update(path, value) returns {code:400, path, value} if invalid path","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns {code:400, path, value} if invalid path"},{"ancestorTitles":["EnvironmentService","update(path, value)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentService update(path, value) ignores the action if invalid path","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"ignores the action if invalid path"},{"ancestorTitles":["EnvironmentService","update(path, value)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentService update(path, value) returns {code:422, path, value} if property doesn't exist","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns {code:422, path, value} if property doesn't exist"},{"ancestorTitles":["EnvironmentService","update(path, value)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentService update(path, value) ignores the action if property doesn't exist","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"ignores the action if property doesn't exist"},{"ancestorTitles":["EnvironmentService","upsert(path, value)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentService upsert(path, value) returns {code:200, path, value} if property updated","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns {code:200, path, value} if property updated"},{"ancestorTitles":["EnvironmentService","upsert(path, value)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentService upsert(path, value) updates the environment store if property updated","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"updates the environment store if property updated"},{"ancestorTitles":["EnvironmentService","upsert(path, value)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentService upsert(path, value) returns {code:201, path, value} if property created","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns {code:201, path, value} if property created"},{"ancestorTitles":["EnvironmentService","upsert(path, value)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentService upsert(path, value) updates the environment store if property created","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"updates the environment store if property created"},{"ancestorTitles":["EnvironmentService","upsert(path, value)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentService upsert(path, value) updates the environment store if immutable environment","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"updates the environment store if immutable environment"},{"ancestorTitles":["EnvironmentService","upsert(path, value)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentService upsert(path, value) returns {code:400, path, value} if invalid path","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns {code:400, path, value} if invalid path"},{"ancestorTitles":["EnvironmentService","upsert(path, value)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentService upsert(path, value) ignores the action if invalid path","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"ignores the action if invalid path"},{"ancestorTitles":["EnvironmentService","delete(path)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentService delete(path) returns {code:204, path} if property deleted","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns {code:204, path} if property deleted"},{"ancestorTitles":["EnvironmentService","delete(path)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentService delete(path) updates the environment store if property deleted","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"updates the environment store if property deleted"},{"ancestorTitles":["EnvironmentService","delete(path)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentService delete(path) updates the environment store if immutable environment","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"updates the environment store if immutable environment"},{"ancestorTitles":["EnvironmentService","delete(path)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentService delete(path) returns {code:400, path} if invalid path","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns {code:400, path} if invalid path"},{"ancestorTitles":["EnvironmentService","delete(path)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentService delete(path) ignores the action if invalid path","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"ignores the action if invalid path"},{"ancestorTitles":["EnvironmentService","delete(path)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentService delete(path) returns {code:422, path} if property doesn't exist","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns {code:422, path} if property doesn't exist"},{"ancestorTitles":["EnvironmentService","delete(path)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentService delete(path) ignores the action if property doesn't exist","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"ignores the action if property doesn't exist"},{"ancestorTitles":["EnvironmentService","add(properties, path?)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentService add(properties, path?) returns {code:200, value} if property added","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns {code:200, value} if property added"},{"ancestorTitles":["EnvironmentService","add(properties, path?)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentService add(properties, path?) updates the environment store if property added","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"updates the environment store if property added"},{"ancestorTitles":["EnvironmentService","add(properties, path?)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentService add(properties, path?) returns {code:200, value, path} if property added with path","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns {code:200, value, path} if property added with path"},{"ancestorTitles":["EnvironmentService","add(properties, path?)"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentService add(properties, path?) updates the environment store if property added with path","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"updates the environment store if property added with path"},{"ancestorTitles":["EnvironmentService","add(properties, path?)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentService add(properties, path?) updates the environment store if immutable environment","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"updates the environment store if immutable environment"},{"ancestorTitles":["EnvironmentService","add(properties, path?)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentService add(properties, path?) updates the environment store overwriting existing object properties","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"updates the environment store overwriting existing object properties"},{"ancestorTitles":["EnvironmentService","add(properties, path?)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentService add(properties, path?) updates the environment store overwriting existing Array properties","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"updates the environment store overwriting existing Array properties"},{"ancestorTitles":["EnvironmentService","add(properties, path?)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentService add(properties, path?) returns {code:400, path, value} if invalid path","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns {code:400, path, value} if invalid path"},{"ancestorTitles":["EnvironmentService","add(properties, path?)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentService add(properties, path?) ignores the action if invalid path","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"ignores the action if invalid path"},{"ancestorTitles":["EnvironmentService","merge(properties, path?)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentService merge(properties, path?) returns {code:200, value} if property merged","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns {code:200, value} if property merged"},{"ancestorTitles":["EnvironmentService","merge(properties, path?)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentService merge(properties, path?) updates the environment store if property merged","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"updates the environment store if property merged"},{"ancestorTitles":["EnvironmentService","merge(properties, path?)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentService merge(properties, path?) returns {code:200, value, path} if property merged with path","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns {code:200, value, path} if property merged with path"},{"ancestorTitles":["EnvironmentService","merge(properties, path?)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentService merge(properties, path?) updates the environment store if property merged with path","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"updates the environment store if property merged with path"},{"ancestorTitles":["EnvironmentService","merge(properties, path?)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentService merge(properties, path?) updates the environment store if immutable environment","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"updates the environment store if immutable environment"},{"ancestorTitles":["EnvironmentService","merge(properties, path?)"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentService merge(properties, path?) updates the environment store merging existing object properties","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"updates the environment store merging existing object properties"},{"ancestorTitles":["EnvironmentService","merge(properties, path?)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentService merge(properties, path?) updates the environment store merging existing Array properties","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"updates the environment store merging existing Array properties"},{"ancestorTitles":["EnvironmentService","merge(properties, path?)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentService merge(properties, path?) returns {code:400, path, value} if invalid path","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns {code:400, path, value} if invalid path"},{"ancestorTitles":["EnvironmentService","merge(properties, path?)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentService merge(properties, path?) ignores the action if invalid path","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"ignores the action if invalid path"}],"displayName":{"color":"white","name":"environment"},"failureMessage":null},{"leaks":false,"numFailingTests":0,"numPassingTests":43,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1642976993234,"runtime":1270,"slow":false,"start":1642976991964},"skipped":false,"testFilePath":"/home/runner/work/kuoki/kuoki/packages/environment/src/lib/query/environment-query.application.spec.ts","testResults":[{"ancestorTitles":["EnvironmentStore"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentStore has getAll$() method","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"has getAll$() method"},{"ancestorTitles":["EnvironmentStore"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentStore has getAll() method","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"has getAll() method"},{"ancestorTitles":["EnvironmentStore"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentStore has update() method","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"has update() method"},{"ancestorTitles":["EnvironmentStore"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentStore has reset() method","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"has reset() method"},{"ancestorTitles":["EnvironmentQuery"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentQuery getAll$() returns all the distinct environment properties as Observable","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"getAll$() returns all the distinct environment properties as Observable"},{"ancestorTitles":["EnvironmentQuery"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentQuery getAll$() returns always the last value","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"getAll$() returns always the last value"},{"ancestorTitles":["EnvironmentQuery"],"duration":11,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentQuery getAllAsync() returns the first non empty set of environment properties as Promise","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"getAllAsync() returns the first non empty set of environment properties as Promise"},{"ancestorTitles":["EnvironmentQuery"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentQuery getAll(path) returns all the environment properties","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"getAll(path) returns all the environment properties"},{"ancestorTitles":["EnvironmentQuery"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentQuery containsAll$(...paths) returns if all the distinct environment property paths are available for resolution as Observable","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"containsAll$(...paths) returns if all the distinct environment property paths are available for resolution as Observable"},{"ancestorTitles":["EnvironmentQuery"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentQuery containsAll$(...paths) returns always the last value","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"containsAll$(...paths) returns always the last value"},{"ancestorTitles":["EnvironmentQuery"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentQuery containsAllAsync(...paths) returns true as Promise when all environment property paths exists","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"containsAllAsync(...paths) returns true as Promise when all environment property paths exists"},{"ancestorTitles":["EnvironmentQuery"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentQuery containsAll(...paths) returns true if all the environment property paths exists","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"containsAll(...paths) returns true if all the environment property paths exists"},{"ancestorTitles":["EnvironmentQuery"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentQuery containsAll(...paths) returns false if an environment property path doesn't exist","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"containsAll(...paths) returns false if an environment property path doesn't exist"},{"ancestorTitles":["EnvironmentQuery"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentQuery containsSome$(...paths) returns if some distinct environment property paths are available for resolution as Observable","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"containsSome$(...paths) returns if some distinct environment property paths are available for resolution as Observable"},{"ancestorTitles":["EnvironmentQuery"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentQuery containsSome$(...paths) returns always the last value","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"containsSome$(...paths) returns always the last value"},{"ancestorTitles":["EnvironmentQuery"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentQuery containsSomeAsync(...paths) returns true as Promise when some environment property paths exists","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"containsSomeAsync(...paths) returns true as Promise when some environment property paths exists"},{"ancestorTitles":["EnvironmentQuery"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentQuery containsSome(...paths) returns true if some environment property paths exists","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"containsSome(...paths) returns true if some environment property paths exists"},{"ancestorTitles":["EnvironmentQuery"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentQuery containsSome(...paths) returns false if all the environment property paths doesn't exist","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"containsSome(...paths) returns false if all the environment property paths doesn't exist"},{"ancestorTitles":["EnvironmentQuery"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentQuery get$(path) returns the distinct environment property at path as Observable","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"get$(path) returns the distinct environment property at path as Observable"},{"ancestorTitles":["EnvironmentQuery"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentQuery get$(path) returns always the last value","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"get$(path) returns always the last value"},{"ancestorTitles":["EnvironmentQuery"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentQuery get$(path, { defaultValue }) returns the default value if the path cannot be resolved","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"get$(path, { defaultValue }) returns the default value if the path cannot be resolved"},{"ancestorTitles":["EnvironmentQuery"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentQuery get$(path, { targetType }) returns the typed environment property at path","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"get$(path, { targetType }) returns the typed environment property at path"},{"ancestorTitles":["EnvironmentQuery"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentQuery get$(path, { transpile }) returns the transpiled environment property at path","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"get$(path, { transpile }) returns the transpiled environment property at path"},{"ancestorTitles":["EnvironmentQuery"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentQuery get$(path, { defaultValue, targetType, transpile }) returns the modified environment property at path","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"get$(path, { defaultValue, targetType, transpile }) returns the modified environment property at path"},{"ancestorTitles":["EnvironmentQuery"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentQuery getAsync(path) returns the non nil environment property at path","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"getAsync(path) returns the non nil environment property at path"},{"ancestorTitles":["EnvironmentQuery"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentQuery getAsync(path, { defaultValue }) returns the default value if the path cannot be resolved","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"getAsync(path, { defaultValue }) returns the default value if the path cannot be resolved"},{"ancestorTitles":["EnvironmentQuery"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentQuery getAsync(path, { targetType }) returns the typed environment property at path","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"getAsync(path, { targetType }) returns the typed environment property at path"},{"ancestorTitles":["EnvironmentQuery"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentQuery getAsync(path, { transpile }) returns the transpiled environment property at path","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"getAsync(path, { transpile }) returns the transpiled environment property at path"},{"ancestorTitles":["EnvironmentQuery"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentQuery getAsync(path, { defaultValue, targetType, transpile }) returns the modified environment property at path","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"getAsync(path, { defaultValue, targetType, transpile }) returns the modified environment property at path"},{"ancestorTitles":["EnvironmentQuery"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentQuery get(path) returns the environment property at path.","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"get(path) returns the environment property at path."},{"ancestorTitles":["EnvironmentQuery"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentQuery get(path) returns undefined if the path cannot be resolved","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"get(path) returns undefined if the path cannot be resolved"},{"ancestorTitles":["EnvironmentQuery"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentQuery get(path, { defaultValue }) returns the default value if the path cannot be resolved","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"get(path, { defaultValue }) returns the default value if the path cannot be resolved"},{"ancestorTitles":["EnvironmentQuery"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentQuery get(path, { targetType }) returns the typed environment property at path","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"get(path, { targetType }) returns the typed environment property at path"},{"ancestorTitles":["EnvironmentQuery"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentQuery get(path, { transpile }) returns the transpiled environment property at path","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"get(path, { transpile }) returns the transpiled environment property at path"},{"ancestorTitles":["EnvironmentQuery"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentQuery get(path, { defaultValue, targetType, transpile }) returns the modified environment property at path","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"get(path, { defaultValue, targetType, transpile }) returns the modified environment property at path"},{"ancestorTitles":["EnvironmentQuery","transpile options"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentQuery transpile options { transpile } returns transpiled with any type of space in the interpolation","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"{ transpile } returns transpiled with any type of space in the interpolation"},{"ancestorTitles":["EnvironmentQuery","transpile options"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentQuery transpile options { transpile } returns transpiled object as string","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"{ transpile } returns transpiled object as string"},{"ancestorTitles":["EnvironmentQuery","transpile options"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentQuery transpile options { transpile } returns transpiled invalid object","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"{ transpile } returns transpiled invalid object"},{"ancestorTitles":["EnvironmentQuery","transpile options"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentQuery transpile options { transpile } returns transpiled with config.transpileEnvironment","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"{ transpile } returns transpiled with config.transpileEnvironment"},{"ancestorTitles":["EnvironmentQuery","transpile options"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentQuery transpile options { transpile, transpileEnvironment } returns transpiled with transpileEnvironment","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"{ transpile, transpileEnvironment } returns transpiled with transpileEnvironment"},{"ancestorTitles":["EnvironmentQuery","transpile options"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentQuery transpile options { transpile } returns transpiled with config.interpolation","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"{ transpile } returns transpiled with config.interpolation"},{"ancestorTitles":["EnvironmentQuery","transpile options"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentQuery transpile options { transpile, interpolation } returns transpiled with interpolation","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"{ transpile, interpolation } returns transpiled with interpolation"},{"ancestorTitles":["EnvironmentQuery","transpile options"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentQuery transpile options { transpile, interpolation, transpileEnvironment } returns transpiled with interpolation and transpileEnvironment","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"{ transpile, interpolation, transpileEnvironment } returns transpiled with interpolation and transpileEnvironment"}],"displayName":{"color":"white","name":"environment"},"failureMessage":null},{"leaks":false,"numFailingTests":0,"numPassingTests":13,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1642976993649,"runtime":395,"slow":false,"start":1642976993254},"skipped":false,"testFilePath":"/home/runner/work/kuoki/kuoki/packages/environment/src/lib/loader/environment-sources-factory.function.spec.ts","testResults":[{"ancestorTitles":["environmentSourcesFactory()"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"environmentSourcesFactory() () returns empty array","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"() returns empty array"},{"ancestorTitles":["environmentSourcesFactory()"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"environmentSourcesFactory() (source) returns the complete source form minimal abstract","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"(source) returns the complete source form minimal abstract"},{"ancestorTitles":["environmentSourcesFactory()"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"environmentSourcesFactory() (source) returns the complete source form custom abstract","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"(source) returns the complete source form custom abstract"},{"ancestorTitles":["environmentSourcesFactory()"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"environmentSourcesFactory() (source) returns the complete source form minimal interface","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"(source) returns the complete source form minimal interface"},{"ancestorTitles":["environmentSourcesFactory()"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"environmentSourcesFactory() (source) returns the complete source form custom interface","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"(source) returns the complete source form custom interface"},{"ancestorTitles":["environmentSourcesFactory()"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"environmentSourcesFactory() (source) returns source with .id","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"(source) returns source with .id"},{"ancestorTitles":["environmentSourcesFactory()"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"environmentSourcesFactory() (source) returns source with .name","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"(source) returns source with .name"},{"ancestorTitles":["environmentSourcesFactory()"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"environmentSourcesFactory() (source) returns source with .requiredToLoad","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"(source) returns source with .requiredToLoad"},{"ancestorTitles":["environmentSourcesFactory()"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"environmentSourcesFactory() (source) returns source with .loadInOrder","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"(source) returns source with .loadInOrder"},{"ancestorTitles":["environmentSourcesFactory()"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"environmentSourcesFactory() (source) returns source with .mergeProperties","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"(source) returns source with .mergeProperties"},{"ancestorTitles":["environmentSourcesFactory()"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"environmentSourcesFactory() (source) returns source with .ignoreError","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"(source) returns source with .ignoreError"},{"ancestorTitles":["environmentSourcesFactory()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"environmentSourcesFactory() (source) returns source with .path","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"(source) returns source with .path"},{"ancestorTitles":["environmentSourcesFactory()"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"environmentSourcesFactory() (sources[]) returns all as complete sources","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"(sources[]) returns all as complete sources"}],"displayName":{"color":"white","name":"environment"},"failureMessage":null},{"leaks":false,"numFailingTests":0,"numPassingTests":14,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1642976993965,"runtime":296,"slow":false,"start":1642976993669},"skipped":false,"testFilePath":"/home/runner/work/kuoki/kuoki/packages/environment/src/lib/path/is-path.function.spec.ts","testResults":[{"ancestorTitles":["isPath(value)"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"isPath(value) returns false if no string or Array","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns false if no string or Array"},{"ancestorTitles":["isPath(value)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"isPath(value) returns false if empty string \"\"","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns false if empty string \"\""},{"ancestorTitles":["isPath(value)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"isPath(value) returns false if empty Array","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns false if empty Array"},{"ancestorTitles":["isPath(value)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"isPath(value) returns true if contains ASCII letter (a-zA-Z)","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns true if contains ASCII letter (a-zA-Z)"},{"ancestorTitles":["isPath(value)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"isPath(value) returns true if contains number (0-9)","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns true if contains number (0-9)"},{"ancestorTitles":["isPath(value)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"isPath(value) returns true if contains underscore \"_\"","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns true if contains underscore \"_\""},{"ancestorTitles":["isPath(value)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"isPath(value) returns true if contains dollar \"$\"","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns true if contains dollar \"$\""},{"ancestorTitles":["isPath(value)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"isPath(value) returns false if starts with number (0-9)","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns false if starts with number (0-9)"},{"ancestorTitles":["isPath(value)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"isPath(value) returns false if key contains any other character","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns false if key contains any other character"},{"ancestorTitles":["isPath(value)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"isPath(value) returns true for valid dot-separated keys","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns true for valid dot-separated keys"},{"ancestorTitles":["isPath(value)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"isPath(value) returns false if any invalid dot-separated key","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns false if any invalid dot-separated key"},{"ancestorTitles":["isPath(value)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"isPath(value) returns true for valid Array keys","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns true for valid Array keys"},{"ancestorTitles":["isPath(value)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"isPath(value) returns false if Array contains dot-separated key","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns false if Array contains dot-separated key"},{"ancestorTitles":["isPath(value)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"isPath(value) returns false if any invalid Array key","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns false if any invalid Array key"}],"displayName":{"color":"white","name":"environment"},"failureMessage":null},{"leaks":false,"numFailingTests":0,"numPassingTests":6,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1642976994449,"runtime":467,"slow":false,"start":1642976993982},"skipped":false,"testFilePath":"/home/runner/work/kuoki/kuoki/packages/environment/src/lib/helpers/async-not-nil.function.spec.ts","testResults":[{"ancestorTitles":["asyncNotNil(source, due?)"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"asyncNotNil(source, due?) returns resolved Promise with the first non nil value from Observable","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns resolved Promise with the first non nil value from Observable"},{"ancestorTitles":["asyncNotNil(source, due?)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"asyncNotNil(source, due?) returns resolved Promise with the first non nil value from Promise","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns resolved Promise with the first non nil value from Promise"},{"ancestorTitles":["asyncNotNil(source, due?)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"asyncNotNil(source, due?) returns resolved Promise with the first non nil value from Array","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns resolved Promise with the first non nil value from Array"},{"ancestorTitles":["asyncNotNil(source, due?)"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"asyncNotNil(source, due?) returns resolved Promise if due is setted and emits a value in given time span","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns resolved Promise if due is setted and emits a value in given time span"},{"ancestorTitles":["asyncNotNil(source, due?)"],"duration":15,"failureDetails":[],"failureMessages":[],"fullName":"asyncNotNil(source, due?) returns rejected Promise as TimeoutError if due is setted and doesn't emit a value in given time span","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns rejected Promise as TimeoutError if due is setted and doesn't emit a value in given time span"},{"ancestorTitles":["asyncNotNil(source, due?)"],"duration":14,"failureDetails":[],"failureMessages":[],"fullName":"asyncNotNil(source, due?) returns rejected Promise as EmptyError if no elements in sequence","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns rejected Promise as EmptyError if no elements in sequence"}],"displayName":{"color":"white","name":"environment"},"failureMessage":null},{"leaks":false,"numFailingTests":0,"numPassingTests":7,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1642976994961,"runtime":499,"slow":false,"start":1642976994462},"skipped":false,"testFilePath":"/home/runner/work/kuoki/kuoki/packages/environment/src/lib/loader/create-environment-loader.function.spec.ts","testResults":[{"ancestorTitles":["EnvironmentStore"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentStore has getAll$() method","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"has getAll$() method"},{"ancestorTitles":["EnvironmentStore"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentStore has getAll() method","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"has getAll() method"},{"ancestorTitles":["EnvironmentStore"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentStore has update() method","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"has update() method"},{"ancestorTitles":["EnvironmentStore"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentStore has reset() method","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"has reset() method"},{"ancestorTitles":["createEnvironmentLoader(service, sources?)"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"createEnvironmentLoader(service, sources?) (service) returns an EnvironmentLoader without sources","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"(service) returns an EnvironmentLoader without sources"},{"ancestorTitles":["createEnvironmentLoader(service, sources?)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"createEnvironmentLoader(service, sources?) (service, source) returns an EnvironmentLoader with a single source","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"(service, source) returns an EnvironmentLoader with a single source"},{"ancestorTitles":["createEnvironmentLoader(service, sources?)"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"createEnvironmentLoader(service, sources?) (service, source[]) returns an EnvironmentLoader with an array of sources","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"(service, source[]) returns an EnvironmentLoader with an array of sources"}],"displayName":{"color":"white","name":"environment"},"failureMessage":null},{"leaks":false,"numFailingTests":0,"numPassingTests":4,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1642976995253,"runtime":267,"slow":false,"start":1642976994986},"skipped":false,"testFilePath":"/home/runner/work/kuoki/kuoki/packages/environment/src/lib/path/overwrites-path.function.spec.ts","testResults":[{"ancestorTitles":["overwritesPath(path, environment)"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"overwritesPath(path, environment) returns true if any value in path is not an object","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns true if any value in path is not an object"},{"ancestorTitles":["overwritesPath(path, environment)"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"overwritesPath(path, environment) returns false if is an invalid path","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns false if is an invalid path"},{"ancestorTitles":["overwritesPath(path, environment)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"overwritesPath(path, environment) returns false if path is not in environment","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns false if path is not in environment"},{"ancestorTitles":["overwritesPath(path, environment)"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"overwritesPath(path, environment) returns false if all values in path are objects or nil","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns false if all values in path are objects or nil"}],"displayName":{"color":"white","name":"environment"},"failureMessage":null},{"leaks":false,"numFailingTests":0,"numPassingTests":6,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1642976995702,"runtime":428,"slow":false,"start":1642976995274},"skipped":false,"testFilePath":"/home/runner/work/kuoki/kuoki/packages/environment/src/lib/query/create-environment-query.function.spec.ts","testResults":[{"ancestorTitles":["EnvironmentStore"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentStore has getAll$() method","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"has getAll$() method"},{"ancestorTitles":["EnvironmentStore"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentStore has getAll() method","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"has getAll() method"},{"ancestorTitles":["EnvironmentStore"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentStore has update() method","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"has update() method"},{"ancestorTitles":["EnvironmentStore"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentStore has reset() method","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"has reset() method"},{"ancestorTitles":["createEnvironmentQuery(store, config?)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"createEnvironmentQuery(store, config?) (store) returns an EnvironmentQuery","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"(store) returns an EnvironmentQuery"},{"ancestorTitles":["createEnvironmentQuery(store, config?)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"createEnvironmentQuery(store, config?) (store, config) returns an EnvironmentQuery with custom config","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"(store, config) returns an EnvironmentQuery with custom config"}],"displayName":{"color":"white","name":"environment"},"failureMessage":null},{"leaks":false,"numFailingTests":0,"numPassingTests":3,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1642976995993,"runtime":265,"slow":false,"start":1642976995728},"skipped":false,"testFilePath":"/home/runner/work/kuoki/kuoki/packages/environment/src/lib/helpers/mutable.function.spec.ts","testResults":[{"ancestorTitles":["mutable(value)"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"mutable(value) returns non object values as is","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns non object values as is"},{"ancestorTitles":["mutable(value)"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"mutable(value) returns the property as mutable if is an object","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns the property as mutable if is an object"},{"ancestorTitles":["mutable(value)"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"mutable(value) returns the property as mutable if is an Array","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns the property as mutable if is an Array"}],"displayName":{"color":"white","name":"environment"},"failureMessage":null},{"leaks":false,"numFailingTests":0,"numPassingTests":4,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1642976996163,"runtime":154,"slow":false,"start":1642976996009},"skipped":false,"testFilePath":"/home/runner/work/kuoki/kuoki/packages/environment/src/lib/store/environment-store.gateway.spec.ts","testResults":[{"ancestorTitles":["EnvironmentStore"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentStore has getAll$() method","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"has getAll$() method"},{"ancestorTitles":["EnvironmentStore"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentStore has getAll() method","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"has getAll() method"},{"ancestorTitles":["EnvironmentStore"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentStore has update() method","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"has update() method"},{"ancestorTitles":["EnvironmentStore"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentStore has reset() method","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"has reset() method"}],"displayName":{"color":"white","name":"environment"},"failureMessage":null},{"leaks":false,"numFailingTests":0,"numPassingTests":4,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1642976996415,"runtime":240,"slow":false,"start":1642976996175},"skipped":false,"testFilePath":"/home/runner/work/kuoki/kuoki/packages/environment/src/lib/query/environment-query-config-factory.function.spec.ts","testResults":[{"ancestorTitles":["environmentConfigFactory(config?)"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"environmentConfigFactory(config?) () returns all the default values","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"() returns all the default values"},{"ancestorTitles":["environmentConfigFactory(config?)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"environmentConfigFactory(config?) ({}) returns all the default values","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"({}) returns all the default values"},{"ancestorTitles":["environmentConfigFactory(config?)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"environmentConfigFactory(config?) ({ interpolation }) returns custom interpolation","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"({ interpolation }) returns custom interpolation"},{"ancestorTitles":["environmentConfigFactory(config?)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"environmentConfigFactory(config?) ({ transpileEnvironment }) returns custom value","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"({ transpileEnvironment }) returns custom value"}],"displayName":{"color":"white","name":"environment"},"failureMessage":null},{"leaks":false,"numFailingTests":0,"numPassingTests":4,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1642976996671,"runtime":243,"slow":false,"start":1642976996428},"skipped":false,"testFilePath":"/home/runner/work/kuoki/kuoki/packages/environment/src/lib/shared/merge-arrays-customizer.function.spec.ts","testResults":[{"ancestorTitles":["mergeArraysCustomizer(obj, source)"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"mergeArraysCustomizer(obj, source) returns the merged Array","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns the merged Array"},{"ancestorTitles":["mergeArraysCustomizer(obj, source)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"mergeArraysCustomizer(obj, source) returns undefined if 'obj' is not Array","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns undefined if 'obj' is not Array"},{"ancestorTitles":["mergeArraysCustomizer(obj, source)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"mergeArraysCustomizer(obj, source) returns undefined if 'source' is not Array","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns undefined if 'source' is not Array"},{"ancestorTitles":["mergeArraysCustomizer(obj, source)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"mergeArraysCustomizer(obj, source) returns undefined if 'obj' and 'source' are not Array","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns undefined if 'obj' and 'source' are not Array"}],"displayName":{"color":"white","name":"environment"},"failureMessage":null},{"leaks":false,"numFailingTests":0,"numPassingTests":5,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1642976997036,"runtime":350,"slow":false,"start":1642976996686},"skipped":false,"testFilePath":"/home/runner/work/kuoki/kuoki/packages/environment/src/lib/service/create-environment-service.function.spec.ts","testResults":[{"ancestorTitles":["EnvironmentStore"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentStore has getAll$() method","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"has getAll$() method"},{"ancestorTitles":["EnvironmentStore"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentStore has getAll() method","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"has getAll() method"},{"ancestorTitles":["EnvironmentStore"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentStore has update() method","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"has update() method"},{"ancestorTitles":["EnvironmentStore"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnvironmentStore has reset() method","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"has reset() method"},{"ancestorTitles":["createEnvironmentService(store)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"createEnvironmentService(store) returns an EnvironmentService","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns an EnvironmentService"}],"displayName":{"color":"white","name":"environment"},"failureMessage":null},{"leaks":false,"numFailingTests":0,"numPassingTests":1,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1642976997420,"runtime":364,"slow":false,"start":1642976997056},"skipped":false,"testFilePath":"/home/runner/work/kuoki/kuoki/packages/environment/src/lib/helpers/filter-nil.operator.spec.ts","testResults":[{"ancestorTitles":["filterNil()"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"filterNil() emits items from the source Observable that are not null or undefined","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"emits items from the source Observable that are not null or undefined"}],"displayName":{"color":"white","name":"environment"},"failureMessage":null},{"leaks":false,"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1642976997673,"runtime":241,"slow":false,"start":1642976997432},"skipped":false,"testFilePath":"/home/runner/work/kuoki/kuoki/packages/environment/src/lib/loader/lifecycle-hook.function.spec.ts","testResults":[{"ancestorTitles":["lifecycleHook(obj, method, ...args)"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"lifecycleHook(obj, method, ...args) returns The method's return value if exists","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns The method's return value if exists"},{"ancestorTitles":["lifecycleHook(obj, method, ...args)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"lifecycleHook(obj, method, ...args) returns undefined if the method doesn't exist","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns undefined if the method doesn't exist"}],"displayName":{"color":"white","name":"environment"},"failureMessage":null},{"leaks":false,"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1642976997922,"runtime":237,"slow":false,"start":1642976997685},"skipped":false,"testFilePath":"/home/runner/work/kuoki/kuoki/packages/environment/src/lib/path/path-as-array.function.spec.ts","testResults":[{"ancestorTitles":["pathAsArray(path)"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"pathAsArray(path) returns the path as Array if is a string","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns the path as Array if is a string"},{"ancestorTitles":["pathAsArray(path)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"pathAsArray(path) returns the path as Array if is an Array","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns the path as Array if is an Array"}],"displayName":{"color":"white","name":"environment"},"failureMessage":null},{"leaks":false,"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1642976998177,"runtime":238,"slow":false,"start":1642976997939},"skipped":false,"testFilePath":"/home/runner/work/kuoki/kuoki/packages/environment/src/lib/path/path-as-string.function.spec.ts","testResults":[{"ancestorTitles":["pathAsString(path)"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"pathAsString(path) returns the path as string if is a string","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns the path as string if is a string"},{"ancestorTitles":["pathAsString(path)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"pathAsString(path) returns the path as string if is an Array","invocations":1,"location":null,"numPassingAsserts":0,"status":"passed","title":"returns the path as string if is an Array"}],"displayName":{"color":"white","name":"environment"},"failureMessage":null}],"wasInterrupted":false,"config":{"bail":0,"changedFilesWithAncestor":false,"collectCoverage":true,"collectCoverageFrom":[],"coverageDirectory":"lcov-report","coverageProvider":"babel","coverageReporters":["html","lcov"],"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":false,"expand":false,"findRelatedTests":false,"forceExit":false,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":1,"noStackTrace":false,"nonFlagArgs":[],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"passWithNoTests":true,"projects":[],"reporters":[["default",{}],["/home/runner/work/kuoki/kuoki/node_modules/jest-html-reporters/index.js",{"publicPath":"docs/environment/coverage","filename":"index.html","pageTitle":"Environment Tests","expand":true,"hideIcon":true}]],"rootDir":"/home/runner/work/kuoki/kuoki/packages/environment","runTestsByPath":false,"skipFilter":false,"testFailureExitCode":1,"testPathPattern":"","testSequencer":"/home/runner/work/kuoki/kuoki/node_modules/@jest/test-sequencer/build/index.js","updateSnapshot":"new","useStderr":false,"watch":false,"watchAll":false,"watchman":true},"endTime":1642976998315,"_reporterOptions":{"publicPath":"docs/environment/coverage","filename":"index.html","expand":true,"pageTitle":"Environment Tests","hideIcon":true,"testCommand":"npx jest","openReport":false,"failureMessageOnly":false,"enableMergeData":false,"dataMergeLevel":1},"attachInfos":{}})